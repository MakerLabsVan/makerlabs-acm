define(["../@polymer/polymer/polymer-legacy.js","../google-apis/google-js-api.js","../@polymer/polymer/polymer-element.js","../@polymer/polymer/lib/legacy/polymer-fn.js"],function(_polymerLegacy,_googleJsApi,_polymerElement,_polymerFn){"use strict";var ProxyLoginAttributes={appPackageName:"apppackagename",clientId:"clientid",cookiePolicy:"cookiepolicy",hostedDomain:"hostedDomain",openidPrompt:"prompt",requestVisibleActions:"requestvisibleactions"},AuthEngine={_clientId:null,get clientId(){return this._clientId},set clientId(val){if(this._clientId&&val&&val!=this._clientId){throw new Error("clientId cannot change. Values do not match. New: "+val+" Old:"+this._clientId)}if(val&&val!=this._clientId){this._clientId=val;this.initAuth2()}},_cookiePolicy:"single_host_origin",get cookiePolicy(){return this._cookiePolicy},set cookiePolicy(val){if(val){this._cookiePolicy=val}},_appPackageName:"",get appPackageName(){return this._appPackageName},set appPackageName(val){if(this._appPackageName&&val&&val!=this._appPackageName){throw new Error("appPackageName cannot change. Values do not match. New: "+val+" Old: "+this._appPackageName)}if(val){this._appPackageName=val}},_requestVisibleActions:"",get requestVisibleactions(){return this._requestVisibleActions},set requestVisibleactions(val){if(this._requestVisibleActions&&val&&val!=this._requestVisibleActions){throw new Error("requestVisibleactions cannot change. Values do not match. New: "+val+" Old: "+this._requestVisibleActions)}if(val)this._requestVisibleActions=val},_hostedDomain:"",get hostedDomain(){return this._hostedDomain},set hostedDomain(val){if(this._hostedDomain&&val&&val!=this._hostedDomain){throw new Error("hostedDomain cannot change. Values do not match. New: "+val+" Old: "+this._hostedDomain)}if(val)this._hostedDomain=val},_openidPrompt:"",get openidPrompt(){return this._openidPrompt},set openidPrompt(val){if("string"!==typeof val){throw new Error("openidPrompt must be a string. Received "+typeof val)}if(val){var values=val.split(" ");values=values.map(function(v){return v.trim()});values=values.filter(function(v){return v});var validValues={none:0,login:0,consent:0,select_account:0};values.forEach(function(v){if("none"==v&&1<values.length){throw new Error("none cannot be combined with other openidPrompt values")}if(!(v in validValues)){throw new Error("invalid openidPrompt value "+v+". Valid values: "+Object.keys(validValues).join(", "))}})}this._openidPrompt=val},_offline:!1,get offline(){return this._offline},set offline(val){this._offline=val;this.updateAdditionalAuth()},_offlineAlwaysPrompt:!1,get offlineAlwaysPrompt(){return this._offlineAlwaysPrompt},set offlineAlwaysPrompt(val){this._offlineAlwaysPrompt=val;this.updateAdditionalAuth()},offlineGranted:!1,_apiLoader:null,_requestedScopeArray:[],get requestedScopes(){return this._requestedScopeArray.join(" ")},_initialized:!1,_signedIn:!1,_grantedScopeArray:[],_needAdditionalAuth:!0,_hasPlusScopes:!1,signinAwares:[],init:function(){this._apiLoader=document.createElement("google-js-api");this._apiLoader.addEventListener("js-api-load",this.loadAuth2.bind(this));if(_polymerElement.PolymerElement){document.body.appendChild(this._apiLoader)}},loadAuth2:function(){gapi.load("auth2",this.initAuth2.bind(this))},initAuth2:function(){if(!("gapi"in window)||!("auth2"in window.gapi)||!this.clientId){return}var auth=gapi.auth2.init({client_id:this.clientId,cookie_policy:this.cookiePolicy,scope:this.requestedScopes,hosted_domain:this.hostedDomain});auth.currentUser.listen(this.handleUserUpdate.bind(this));auth.then(function(){},function(error){console.error(error)})},handleUserUpdate:function(newPrimaryUser){var isSignedIn=newPrimaryUser.isSignedIn();if(isSignedIn!=this._signedIn){this._signedIn=isSignedIn;for(var i=0;i<this.signinAwares.length;i++){this.signinAwares[i]._setSignedIn(isSignedIn)}}if(!this._initialized){for(var i=0;i<this.signinAwares.length;i++){this.signinAwares[i]._setInitialized(!0)}this._initialized=!0}this._grantedScopeArray=this.strToScopeArray(newPrimaryUser.getGrantedScopes());this.updateAdditionalAuth();for(var response=newPrimaryUser.getAuthResponse(),i=0;i<this.signinAwares.length;i++){this.signinAwares[i]._updateScopeStatus(response)}},setOfflineCode:function(code){for(var i=0;i<this.signinAwares.length;i++){this.signinAwares[i]._updateOfflineCode(code)}},strToScopeArray:function(str){if(!str){return[]}for(var scopes=str.replace(/\ +/g," ").trim().split(" "),i=0;i<scopes.length;i++){scopes[i]=scopes[i].toLowerCase();if("https://www.googleapis.com/auth/userinfo.profile"===scopes[i]){scopes[i]="profile"}if("https://www.googleapis.com/auth/userinfo.email"===scopes[i]){scopes[i]="email"}}return scopes.filter(function(value,index,self){return self.indexOf(value)===index})},isPlusScope:function(scope){return-1<scope.indexOf("/auth/games")||-1<scope.indexOf("auth/plus.")&&0>scope.indexOf("auth/plus.me")},hasGrantedScopes:function(scopeStr){for(var scopes=this.strToScopeArray(scopeStr),i=0;i<scopes.length;i++){if(-1===this._grantedScopeArray.indexOf(scopes[i]))return!1}return!0},requestScopes:function(newScopeStr){for(var newScopes=this.strToScopeArray(newScopeStr),scopesUpdated=!1,i=0;i<newScopes.length;i++){if(-1===this._requestedScopeArray.indexOf(newScopes[i])){this._requestedScopeArray.push(newScopes[i]);scopesUpdated=!0}}if(scopesUpdated){this.updateAdditionalAuth();this.updatePlusScopes()}},updateAdditionalAuth:function(){var needMoreAuth=!1;if((this.offlineAlwaysPrompt||this.offline)&&!this.offlineGranted){needMoreAuth=!0}else{for(var i=0;i<this._requestedScopeArray.length;i++){if(-1===this._grantedScopeArray.indexOf(this._requestedScopeArray[i])){needMoreAuth=!0;break}}}if(this._needAdditionalAuth!=needMoreAuth){this._needAdditionalAuth=needMoreAuth;for(var i=0;i<this.signinAwares.length;i++){this.signinAwares[i]._setNeedAdditionalAuth(needMoreAuth)}}},updatePlusScopes:function(){for(var hasPlusScopes=!1,i=0;i<this._requestedScopeArray.length;i++){if(this.isPlusScope(this._requestedScopeArray[i])){hasPlusScopes=!0;break}}if(this._hasPlusScopes!=hasPlusScopes){this._hasPlusScopes=hasPlusScopes;for(var i=0;i<this.signinAwares.length;i++){this.signinAwares[i]._setHasPlusScopes(hasPlusScopes)}}},attachSigninAware:function(aware){if(-1==this.signinAwares.indexOf(aware)){this.signinAwares.push(aware);aware._setNeedAdditionalAuth(this._needAdditionalAuth);aware._setInitialized(this._initialized);aware._setSignedIn(this._signedIn);aware._setHasPlusScopes(this._hasPlusScopes)}else{console.warn("signinAware attached more than once",aware)}},detachSigninAware:function(aware){var index=this.signinAwares.indexOf(aware);if(-1!=index){this.signinAwares.splice(index,1)}else{console.warn("Trying to detach unattached signin-aware")}},getMissingScopes:function(){return this._requestedScopeArray.filter(function(scope){return-1===this._grantedScopeArray.indexOf(scope)}.bind(this)).join(" ")},assertAuthInitialized:function(){if(!this.clientId){throw new Error("AuthEngine not initialized. clientId has not been configured.")}if(!("gapi"in window)){throw new Error("AuthEngine not initialized. gapi has not loaded.")}if(!("auth2"in window.gapi)){throw new Error("AuthEngine not initialized. auth2 not loaded.")}},signIn:function(){this.assertAuthInitialized();var params={scope:this.getMissingScopes()};Object.keys(ProxyLoginAttributes).forEach(function(key){if(this[key]&&""!==this[key]){params[ProxyLoginAttributes[key]]=this[key]}},this);var promise,user=gapi.auth2.getAuthInstance().currentUser.get();if(!(this.offline||this.offlineAlwaysPrompt)){if(user.getGrantedScopes()){promise=user.grant(params)}else{promise=gapi.auth2.getAuthInstance().signIn(params)}}else{params.redirect_uri="postmessage";if(this.offlineAlwaysPrompt){params.approval_prompt="force"}promise=gapi.auth2.getAuthInstance().grantOfflineAccess(params)}promise.then(function(response){var newUser;if(response.code){AuthEngine.offlineGranted=!0;newUser=gapi.auth2.getAuthInstance().currentUser.get();AuthEngine.setOfflineCode(response.code)}else{newUser=response}newUser.getAuthResponse()},function(error){if("Access denied."!==error.reason){this.signinAwares.forEach(function(awareInstance){awareInstance.errorNotify(error)})}}.bind(this))},signOut:function(){this.assertAuthInitialized();gapi.auth2.getAuthInstance().signOut().then(function(){},function(error){console.error(error)})}};AuthEngine.init();(0,_polymerFn.Polymer)({is:"google-signin-aware",properties:{appPackageName:{type:String,observer:"_appPackageNameChanged"},clientId:{type:String,observer:"_clientIdChanged"},cookiePolicy:{type:String,observer:"_cookiePolicyChanged"},requestVisibleActions:{type:String,observer:"_requestVisibleActionsChanged"},hostedDomain:{type:String,observer:"_hostedDomainChanged"},offline:{type:Boolean,value:!1,observer:"_offlineChanged"},offlineAlwaysPrompt:{type:Boolean,value:!1,observer:"_offlineAlwaysPromptChanged"},scopes:{type:String,value:"profile",observer:"_scopesChanged"},openidPrompt:{type:String,value:"",observer:"_openidPromptChanged"},initialized:{type:Boolean,notify:!0,readOnly:!0},signedIn:{type:Boolean,notify:!0,readOnly:!0},isAuthorized:{type:Boolean,notify:!0,readOnly:!0,value:!1},needAdditionalAuth:{type:Boolean,notify:!0,readOnly:!0},hasPlusScopes:{type:Boolean,value:!1,notify:!0,readOnly:!0}},attached:function(){AuthEngine.attachSigninAware(this)},detached:function(){AuthEngine.detachSigninAware(this)},signIn:function(){AuthEngine.signIn()},signOut:function(){AuthEngine.signOut()},errorNotify:function(error){this.fire("google-signin-aware-error",error)},_appPackageNameChanged:function(newName){AuthEngine.appPackageName=newName},_clientIdChanged:function(newId){AuthEngine.clientId=newId},_cookiePolicyChanged:function(newPolicy){AuthEngine.cookiePolicy=newPolicy},_requestVisibleActionsChanged:function(newVal){AuthEngine.requestVisibleActions=newVal},_hostedDomainChanged:function(newVal){AuthEngine.hostedDomain=newVal},_offlineChanged:function(newVal){AuthEngine.offline=newVal},_offlineAlwaysPromptChanged:function(newVal){AuthEngine.offlineAlwaysPrompt=newVal},_scopesChanged:function(newVal){AuthEngine.requestScopes(newVal);this._updateScopeStatus(void 0)},_openidPromptChanged:function(newVal){AuthEngine.openidPrompt=newVal},_updateScopeStatus:function(user){var newAuthorized=this.signedIn&&AuthEngine.hasGrantedScopes(this.scopes);if(newAuthorized!==this.isAuthorized){this._setIsAuthorized(newAuthorized);if(newAuthorized){this.fire("google-signin-aware-success",user)}else{this.fire("google-signin-aware-signed-out",user)}}},_updateOfflineCode:function(code){if(code){this.fire("google-signin-offline-success",{code:code})}}})});