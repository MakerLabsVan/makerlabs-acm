define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/iron-media-query/iron-media-query.js","../../vaadin-themable-mixin/vaadin-themable-mixin.js","./vaadin-date-picker-overlay.js","./vaadin-date-picker-overlay-content.js","./vaadin-date-picker-mixin.js","../../../@polymer/polymer/lib/utils/html-tag.js","../../../@polymer/polymer/lib/utils/case-map.js"],function(_exports,_polymerElement,_ironMediaQuery,_vaadinThemableMixin,_vaadinDatePickerOverlay,_vaadinDatePickerOverlayContent,_vaadinDatePickerMixin,_htmlTag,_caseMap){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.DatePickerLightElement=void 0;class DatePickerLightElement extends(0,_vaadinThemableMixin.ThemableMixin)((0,_vaadinDatePickerMixin.DatePickerMixin)(_polymerElement.PolymerElement)){static get template(){return _htmlTag.html`
    <style>
      :host {
        display: inline-block;
      }

      :host([opened]) {
        pointer-events: auto;
      }
    </style>
    <slot></slot>

    <vaadin-date-picker-overlay id="overlay" fullscreen\$="[[_fullscreen]]" opened="{{opened}}" on-vaadin-overlay-open="_onOverlayOpened" on-vaadin-overlay-close="_onOverlayClosed">
      <template>
        <vaadin-date-picker-overlay-content id="overlay-content" i18n="[[i18n]]" fullscreen\$="[[_fullscreen]]" label="[[label]]" selected-date="{{_selectedDate}}" slot="dropdown-content" focused-date="{{_focusedDate}}" show-week-numbers="[[showWeekNumbers]]" min-date="[[_minDate]]" max-date="[[_maxDate]]" on-date-tap="_close" role="dialog" part="overlay-content">
        </vaadin-date-picker-overlay-content>
      </template>
    </vaadin-date-picker-overlay>

    <iron-media-query query="[[_fullscreenMediaQuery]]" query-matches="{{_fullscreen}}">
    </iron-media-query>
`}static get is(){return"vaadin-date-picker-light"}static get properties(){return{attrForValue:{type:String,value:"bind-value"}}}_input(){return this.querySelector("vaadin-text-field,iron-input,paper-input,.paper-input-input,.input")}set _inputValue(value){if(this._inputElement){this._inputElement[(0,_caseMap.dashToCamelCase)(this.attrForValue)]=value}}get _inputValue(){return this._inputElement&&this._inputElement[(0,_caseMap.dashToCamelCase)(this.attrForValue)]}}_exports.DatePickerLightElement=DatePickerLightElement;customElements.define(DatePickerLightElement.is,DatePickerLightElement)});