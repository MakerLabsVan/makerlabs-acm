{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/vaadin-combo-box.html",
        "start": {
          "line": 335,
          "column": 6
        },
        "end": {
          "line": 335,
          "column": 54
        }
      },
      "elements": [
        {
          "description": "The overlay element.\n\n### Styling\n\nSee [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\nfor `<vaadin-combo-box-overlay>` parts.\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-combo-box-dropdown.html",
          "properties": [
            {
              "name": "opened",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 132,
                  "column": 10
                },
                "end": {
                  "line": 136,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "template",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 138,
                  "column": 10
                },
                "end": {
                  "line": 141,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "content",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 143,
                  "column": 10
                },
                "end": {
                  "line": 146,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "withBackdrop",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 148,
                  "column": 10
                },
                "end": {
                  "line": 152,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "modeless",
              "type": "boolean",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 158,
                  "column": 10
                },
                "end": {
                  "line": 163,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_modelessChanged\""
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "focusTrap",
              "type": "boolean",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 169,
                  "column": 10
                },
                "end": {
                  "line": 172,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_focusedElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 174,
                  "column": 10
                },
                "end": {
                  "line": 176,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseDownInside",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 178,
                  "column": 10
                },
                "end": {
                  "line": 180,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseUpInside",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 182,
                  "column": 10
                },
                "end": {
                  "line": 184,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_instance",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 186,
                  "column": 10
                },
                "end": {
                  "line": 188,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_boundIronOverlayCanceledListener",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 190,
                  "column": 10
                },
                "end": {
                  "line": 192,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 222,
                  "column": 6
                },
                "end": {
                  "line": 233,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_detectIosNavbar",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 235,
                  "column": 6
                },
                "end": {
                  "line": 252,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_setTemplateFromNodes",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 254,
                  "column": 6
                },
                "end": {
                  "line": 256,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "nodes"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "close",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 262,
                  "column": 6
                },
                "end": {
                  "line": 268,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "sourceEvent"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 270,
                  "column": 6
                },
                "end": {
                  "line": 281,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 283,
                  "column": 6
                },
                "end": {
                  "line": 299,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseDownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 301,
                  "column": 6
                },
                "end": {
                  "line": 303,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseUpListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 305,
                  "column": 6
                },
                "end": {
                  "line": 307,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_outsideClickListener",
              "description": "We need to listen on 'click' / 'tap' event and capture it and close the overlay before\npropagating the event to the listener in the button. Otherwise, if the clicked button would call\nopen(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 317,
                  "column": 6
                },
                "end": {
                  "line": 334,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_keydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 340,
                  "column": 6
                },
                "end": {
                  "line": 361,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 367,
                  "column": 6
                },
                "end": {
                  "line": 387,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_animatedOpening",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 389,
                  "column": 6
                },
                "end": {
                  "line": 402,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_attachOverlay",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 404,
                  "column": 6
                },
                "end": {
                  "line": 408,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_animatedClosing",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 410,
                  "column": 6
                },
                "end": {
                  "line": 426,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_detachOverlay",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 428,
                  "column": 6
                },
                "end": {
                  "line": 432,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_modelessChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 441,
                  "column": 6
                },
                "end": {
                  "line": 449,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "modeless"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_enterModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 451,
                  "column": 6
                },
                "end": {
                  "line": 463,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_exitModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 465,
                  "column": 6
                },
                "end": {
                  "line": 476,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_templateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 478,
                  "column": 6
                },
                "end": {
                  "line": 489,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_contentChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 491,
                  "column": 6
                },
                "end": {
                  "line": 493,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "content"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_isFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 495,
                  "column": 6
                },
                "end": {
                  "line": 497,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_cycleTab",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 499,
                  "column": 6
                },
                "end": {
                  "line": 535,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "increment"
                },
                {
                  "name": "index"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_getFocusableElements",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 537,
                  "column": 6
                },
                "end": {
                  "line": 541,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_processPendingMutationObserversFor",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 543,
                  "column": 6
                },
                "end": {
                  "line": 547,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "privacy": "private",
          "superclass": "Vaadin.OverlayElement",
          "name": "Vaadin.ComboBoxOverlayElement",
          "attributes": [
            {
              "name": "opened",
              "description": "",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 132,
                  "column": 10
                },
                "end": {
                  "line": 136,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "template",
              "description": "",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 138,
                  "column": 10
                },
                "end": {
                  "line": 141,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "content",
              "description": "",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 143,
                  "column": 10
                },
                "end": {
                  "line": 146,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "with-backdrop",
              "description": "",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 148,
                  "column": 10
                },
                "end": {
                  "line": 152,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "modeless",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 158,
                  "column": 10
                },
                "end": {
                  "line": 163,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "focus-trap",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "sourceRange": {
                "file": "../bower_components/vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 169,
                  "column": 10
                },
                "end": {
                  "line": 172,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-close",
              "description": "vaadin-overlay-close\nfired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-escape-press",
              "description": "vaadin-overlay-escape-press\nfired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-open",
              "description": "vaadin-overlay-open\nfired after the `vaadin-overlay` is opened.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-outside-click",
              "description": "vaadin-overlay-outside-click\nfired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "opened-changed",
              "description": "Fired when the `opened` property changes.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "template-changed",
              "description": "Fired when the `template` property changes.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "content-changed",
              "description": "Fired when the `content` property changes.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-combo-box-overlay"
        },
        {
          "description": "Element for internal use only.",
          "summary": "",
          "path": "src/vaadin-combo-box-dropdown.html",
          "properties": [
            {
              "name": "opened",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 63,
                  "column": 10
                },
                "end": {
                  "line": 66,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "template",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 10
                },
                "end": {
                  "line": 71,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "touchDevice",
              "type": "boolean",
              "description": "True if the device supports touch events.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 10
                },
                "end": {
                  "line": 87,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "positionTarget",
              "type": "Object",
              "description": "The element to position/align the dropdown by.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 92,
                  "column": 10
                },
                "end": {
                  "line": 94,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "alignedAbove",
              "type": "boolean",
              "description": "If `true`, overlay is aligned above the `positionTarget`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 99,
                  "column": 10
                },
                "end": {
                  "line": 102,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 6
                },
                "end": {
                  "line": 118,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 120,
                  "column": 6
                },
                "end": {
                  "line": 127,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 129,
                  "column": 6
                },
                "end": {
                  "line": 135,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "notifyResize",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 6
                },
                "end": {
                  "line": 145,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 158,
                  "column": 6
                },
                "end": {
                  "line": 171,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ]
            },
            {
              "name": "_outsideClickListener",
              "description": "open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 6
                },
                "end": {
                  "line": 182,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_isPositionFixed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 184,
                  "column": 6
                },
                "end": {
                  "line": 189,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "name": "_getOffsetParent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 191,
                  "column": 6
                },
                "end": {
                  "line": 203,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "name": "_verticalOffset",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 6
                },
                "end": {
                  "line": 207,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "overlayRect"
                },
                {
                  "name": "targetRect"
                }
              ]
            },
            {
              "name": "_shouldAlignAbove",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 209,
                  "column": 6
                },
                "end": {
                  "line": 217,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 219,
                  "column": 6
                },
                "end": {
                  "line": 246,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "privacy": "private",
          "superclass": "HTMLElement",
          "name": "Vaadin.ComboBoxDropdownElement",
          "attributes": [
            {
              "name": "opened",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 63,
                  "column": 10
                },
                "end": {
                  "line": 66,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "template",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 10
                },
                "end": {
                  "line": 71,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "touch-device",
              "description": "True if the device supports touch events.",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 10
                },
                "end": {
                  "line": 87,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "position-target",
              "description": "The element to position/align the dropdown by.",
              "sourceRange": {
                "start": {
                  "line": 92,
                  "column": 10
                },
                "end": {
                  "line": 94,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "aligned-above",
              "description": "If `true`, overlay is aligned above the `positionTarget`",
              "sourceRange": {
                "start": {
                  "line": 99,
                  "column": 10
                },
                "end": {
                  "line": 102,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "vaadin-combo-box-dropdown-closed",
              "description": "vaadin-combo-box-dropdown-closed",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-combo-box-dropdown-opened",
              "description": "vaadin-combo-box-dropdown-opened",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "opened-changed",
              "description": "Fired when the `opened` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "template-changed",
              "description": "Fired when the `template` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "src/vaadin-combo-box-dropdown.html",
                "start": {
                  "line": 22,
                  "column": 6
                },
                "end": {
                  "line": 22,
                  "column": 19
                }
              }
            }
          ],
          "tagname": "vaadin-combo-box-dropdown"
        },
        {
          "description": "The default element used for items in the vaadin-combo-box.\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description\n---|---\n`content` | The element that wraps the item label or template content\n\nThe following state attributes are exposed for styling:\n\nAttribute    | Description | Part name\n-------------|-------------|------------\n`selected` | Set when the item is selected | :host\n`focused` | Set when the item is focused | :host\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-combo-box-item.html",
          "properties": [
            {
              "name": "index",
              "type": "number",
              "description": "The index of the item",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 10
                },
                "end": {
                  "line": 59,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "item",
              "type": "(String | Object)",
              "description": "The item to render",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 65,
                  "column": 10
                },
                "end": {
                  "line": 65,
                  "column": 22
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "label",
              "type": "string",
              "description": "The text label corresponding to the item",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 10
                },
                "end": {
                  "line": 70,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "selected",
              "type": "boolean",
              "description": "True when item is selected",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 75,
                  "column": 10
                },
                "end": {
                  "line": 79,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "focused",
              "type": "boolean",
              "description": "True when item is focused",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 84,
                  "column": 10
                },
                "end": {
                  "line": 88,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "_itemTemplateInstance",
              "type": "Object",
              "description": "The template instance corresponding to the item",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 93,
                  "column": 10
                },
                "end": {
                  "line": 93,
                  "column": 39
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 6
                },
                "end": {
                  "line": 123,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_updateLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 6
                },
                "end": {
                  "line": 130,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                },
                {
                  "name": "_itemTemplateInstance"
                }
              ]
            },
            {
              "name": "_updateTemplateInstanceVariable",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 6
                },
                "end": {
                  "line": 137,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "variable"
                },
                {
                  "name": "value"
                },
                {
                  "name": "_itemTemplateInstance"
                }
              ]
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "privacy": "private",
          "superclass": "HTMLElement",
          "name": "Vaadin.ComboBoxItemElement",
          "attributes": [
            {
              "name": "index",
              "description": "The index of the item",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 10
                },
                "end": {
                  "line": 59,
                  "column": 23
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "item",
              "description": "The item to render",
              "sourceRange": {
                "start": {
                  "line": 65,
                  "column": 10
                },
                "end": {
                  "line": 65,
                  "column": 22
                }
              },
              "metadata": {},
              "type": "(String | Object)"
            },
            {
              "name": "label",
              "description": "The text label corresponding to the item",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 10
                },
                "end": {
                  "line": 70,
                  "column": 23
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "selected",
              "description": "True when item is selected",
              "sourceRange": {
                "start": {
                  "line": 75,
                  "column": 10
                },
                "end": {
                  "line": 79,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "focused",
              "description": "True when item is focused",
              "sourceRange": {
                "start": {
                  "line": 84,
                  "column": 10
                },
                "end": {
                  "line": 88,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-combo-box-item",
          "mixins": [
            "Vaadin.ThemableMixin"
          ]
        },
        {
          "description": "Element for internal use only.",
          "summary": "",
          "path": "src/vaadin-combo-box-dropdown-wrapper.html",
          "properties": [
            {
              "name": "touchDevice",
              "type": "boolean",
              "description": "True if the device supports touch events.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 10
                },
                "end": {
                  "line": 93,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "opened",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 95,
                  "column": 10
                },
                "end": {
                  "line": 95,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "positionTarget",
              "type": "Object",
              "description": "The element to position/align the dropdown by.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 10
                },
                "end": {
                  "line": 102,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "loading",
              "type": "boolean",
              "description": "`true` when new items are being loaded.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 10
                },
                "end": {
                  "line": 112,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_setOverlayHeight\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_selectedItem",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 114,
                  "column": 10
                },
                "end": {
                  "line": 116,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_items",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 10
                },
                "end": {
                  "line": 120,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_focusedIndex",
              "type": "number",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 122,
                  "column": 10
                },
                "end": {
                  "line": 127,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_focusedIndexChanged\""
                }
              },
              "defaultValue": "-1"
            },
            {
              "name": "_focusedItem",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 129,
                  "column": 10
                },
                "end": {
                  "line": 132,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "_itemLabelPath",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 134,
                  "column": 10
                },
                "end": {
                  "line": 137,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"label\""
            },
            {
              "name": "_itemValuePath",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 139,
                  "column": 10
                },
                "end": {
                  "line": 142,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\""
            },
            {
              "name": "_selector",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 144,
                  "column": 10
                },
                "end": {
                  "line": 144,
                  "column": 27
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 152,
                  "column": 6
                },
                "end": {
                  "line": 168,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_templateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 170,
                  "column": 6
                },
                "end": {
                  "line": 173,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_loadingChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 175,
                  "column": 6
                },
                "end": {
                  "line": 181,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "loading"
                }
              ]
            },
            {
              "name": "_selectorChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 183,
                  "column": 6
                },
                "end": {
                  "line": 185,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selector"
                }
              ]
            },
            {
              "name": "_setOverlayHeight",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 187,
                  "column": 6
                },
                "end": {
                  "line": 205,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_maxOverlayHeight",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 207,
                  "column": 6
                },
                "end": {
                  "line": 217,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "targetRect"
                }
              ]
            },
            {
              "name": "_getFocusedItem",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 219,
                  "column": 6
                },
                "end": {
                  "line": 223,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedIndex"
                }
              ]
            },
            {
              "name": "_isItemSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 225,
                  "column": 6
                },
                "end": {
                  "line": 227,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                },
                {
                  "name": "selectedItem"
                }
              ]
            },
            {
              "name": "_onItemClick",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 6
                },
                "end": {
                  "line": 235,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "indexOfLabel",
              "description": "Gets the index of the item with the provided label.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 241,
                  "column": 6
                },
                "end": {
                  "line": 252,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                }
              ],
              "return": {
                "type": "Number"
              }
            },
            {
              "name": "getItemLabel",
              "description": "Gets the label string for the item based on the `_itemLabelPath`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 258,
                  "column": 6
                },
                "end": {
                  "line": 264,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "return": {
                "type": "String"
              }
            },
            {
              "name": "_isItemFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 266,
                  "column": 6
                },
                "end": {
                  "line": 268,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedIndex"
                },
                {
                  "name": "itemIndex"
                }
              ]
            },
            {
              "name": "_getAriaSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 270,
                  "column": 6
                },
                "end": {
                  "line": 272,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedIndex"
                },
                {
                  "name": "itemIndex"
                }
              ]
            },
            {
              "name": "_getAriaRole",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 274,
                  "column": 6
                },
                "end": {
                  "line": 276,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "itemIndex"
                }
              ]
            },
            {
              "name": "_focusedIndexChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 278,
                  "column": 6
                },
                "end": {
                  "line": 282,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index"
                }
              ]
            },
            {
              "name": "_scrollIntoView",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 284,
                  "column": 6
                },
                "end": {
                  "line": 315,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index"
                }
              ]
            },
            {
              "name": "ensureItemsRendered",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 317,
                  "column": 6
                },
                "end": {
                  "line": 319,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "adjustScrollPosition",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 321,
                  "column": 6
                },
                "end": {
                  "line": 325,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_patchWheelOverScrolling",
              "description": "We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\nFurther improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\nscrolling the parent similarly to touch scrolling.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 332,
                  "column": 6
                },
                "end": {
                  "line": 345,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "updateViewportBoundaries",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 347,
                  "column": 6
                },
                "end": {
                  "line": 350,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_visibleItemsCount",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 368,
                  "column": 6
                },
                "end": {
                  "line": 380,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_selectItem",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 382,
                  "column": 6
                },
                "end": {
                  "line": 387,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ]
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 389,
                  "column": 6
                },
                "end": {
                  "line": 393,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_stopPropagation",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 395,
                  "column": 6
                },
                "end": {
                  "line": 397,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_hidden",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 399,
                  "column": 6
                },
                "end": {
                  "line": 401,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "itemsChange"
                },
                {
                  "name": "loading"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "privacy": "private",
          "superclass": "HTMLElement",
          "name": "Vaadin.ComboBoxDropdownWrapperElement",
          "attributes": [
            {
              "name": "touch-device",
              "description": "True if the device supports touch events.",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 10
                },
                "end": {
                  "line": 93,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "opened",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 95,
                  "column": 10
                },
                "end": {
                  "line": 95,
                  "column": 25
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "position-target",
              "description": "The element to position/align the dropdown by.",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 10
                },
                "end": {
                  "line": 102,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "loading",
              "description": "`true` when new items are being loaded.",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 10
                },
                "end": {
                  "line": 112,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-combo-box-dropdown-wrapper"
        },
        {
          "description": "`<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\nonly the dropdown functionality and leaving the input field definition to the user.\n\nThe element has the same API as `<vaadin-combo-box>`.\n\nTo create a custom input field, you need to add a child element which has a two-way\ndata-bindable property representing the input value. The property name is expected\nto be `value` by default. See the example below for a simplest possible example\nusing a `<vaadin-text-field>` element.\n\n```html\n<vaadin-combo-box-light>\n  <vaadin-text-field>\n  </vaadin-text-field>\n</vaadin-combo-box-light>\n```\n\nIf you are using other custom input fields like `<iron-input>`, you\nneed to define the name of the bindable property with the `attrForValue` attribute.\n\n```html\n<vaadin-combo-box-light attr-for-value=\"bind-value\">\n  <iron-input>\n    <input>\n  </iron-input>\n</vaadin-combo-box-light>\n```\n\nIn the next example you can see how to create a custom input field based\non a `<paper-input>` decorated with a custom `<iron-icon>` and\ntwo `<paper-button>`s to act as the clear and toggle controls.\n\n```html\n<vaadin-combo-box-light>\n  <paper-input label=\"Elements\" class=\"input\">\n    <iron-icon icon=\"toll\" slot=\"prefix\"></iron-icon>\n    <paper-button slot=\"suffix\" class=\"clear-button\">Clear</paper-button>\n    <paper-button slot=\"suffix\" class=\"toggle-button\">Toggle</paper-button>\n  </paper-input>\n</vaadin-combo-box-light>\n```",
          "summary": "",
          "path": "src/vaadin-combo-box-light.html",
          "properties": [
            {
              "name": "opened",
              "type": "boolean",
              "description": "True if the dropdown is open, false otherwise.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_openedChanged\""
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "Set to true to disable this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 35,
                  "column": 8
                },
                "end": {
                  "line": 39,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "readonly",
              "type": "boolean",
              "description": "When present, it specifies that the element field is read-only.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "items",
              "type": "Array",
              "description": "A full set of items to filter the visible options from.\nThe items can be of either `String` or `Object` type.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "allowCustomValue",
              "type": "boolean",
              "description": "If `true`, the user can input a value that is not present in the items list.\n`value` property will be set to the input value in this case.\nAlso, when `value` is set programmatically, the input value will be set\nto reflect that value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filteredItems",
              "type": "Array",
              "description": "A subset of items, filtered based on the user input. Filtered items\ncan be assigned directly to omit the internal filtering functionality.\nThe items can be of either `String` or `Object` type.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "value",
              "type": "string",
              "description": "The `String` value for the selected item of the combo box. Provides\nthe value for `iron-form`.\n\nWhen there’s no item selected, the value is an empty string.\n\nUse `selectedItem` property to get the raw selected item from\nthe `items` array.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\""
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_lastCommittedValue",
              "type": "string",
              "description": "Used to detect user value changes and fire `change` events.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 97,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "loading",
              "type": "boolean",
              "description": "When set to `true`, \"loading\" attribute is added to host and the overlay element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 102,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_focusedIndex",
              "type": "number",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 108,
                  "column": 8
                },
                "end": {
                  "line": 111,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "-1",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filter",
              "type": "string",
              "description": "Filtering string the user has typed into the input field.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "selectedItem",
              "type": "Object",
              "description": "The selected item from the `items` array.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 125,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "itemLabelPath",
              "type": "string",
              "description": "Path for label of the item. If `items` is an array of objects, the\n`itemLabelPath` is used to fetch the displayed string label for each\nitem.\n\nThe item label is also used for matching items when processing user\ninput, i.e., for filtering and selecting items.\n\nWhen using item templates, the property is still needed because it is used\nfor filtering, and for displaying the selected item value in the input box.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 144,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"label\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "itemValuePath",
              "type": "string",
              "description": "Path for the value of the item. If `items` is an array of objects, the\n`itemValuePath:` is used to fetch the string value for the selected\nitem.\n\nThe item value is used in the `value` property of the combo box,\nto provide the form value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "invalid",
              "type": "boolean",
              "description": "Set to true if the value is invalid.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_toggleElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 176,
                  "column": 8
                },
                "end": {
                  "line": 176,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_clearElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 177,
                  "column": 8
                },
                "end": {
                  "line": 177,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_inputElementValue",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 179,
                  "column": 8
                },
                "end": {
                  "line": 179,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_closeOnBlurIsPrevented",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 181,
                  "column": 8
                },
                "end": {
                  "line": 181,
                  "column": 40
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_previousDocumentPointerEvents",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 183,
                  "column": 8
                },
                "end": {
                  "line": 183,
                  "column": 46
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "attrForValue",
              "type": "string",
              "description": "Name of the two-way data-bindable property representing the\nvalue of the custom input field.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 10
                },
                "end": {
                  "line": 92,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\""
            },
            {
              "name": "inputElement",
              "type": "Element",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 10
                },
                "end": {
                  "line": 97,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 101,
                  "column": 6
                },
                "end": {
                  "line": 105,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "open",
              "description": "Opens the dropdown list.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 233,
                  "column": 4
                },
                "end": {
                  "line": 238,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "close",
              "description": "Closes the dropdown list.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 243,
                  "column": 4
                },
                "end": {
                  "line": 245,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 247,
                  "column": 4
                },
                "end": {
                  "line": 266,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "old"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onOverlayTouchStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 268,
                  "column": 4
                },
                "end": {
                  "line": 274,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onClick",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 276,
                  "column": 4
                },
                "end": {
                  "line": 292,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onKeyDown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 298,
                  "column": 4
                },
                "end": {
                  "line": 318,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_isEventKey",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 320,
                  "column": 4
                },
                "end": {
                  "line": 322,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "k"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_getItemLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 324,
                  "column": 4
                },
                "end": {
                  "line": 326,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_getItemValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 328,
                  "column": 4
                },
                "end": {
                  "line": 334,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onArrowDown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 336,
                  "column": 4
                },
                "end": {
                  "line": 345,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onArrowUp",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 347,
                  "column": 4
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_prefillFocusedItemLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 374,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 376,
                  "column": 4
                },
                "end": {
                  "line": 392,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "start"
                },
                {
                  "name": "end"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_markAllSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 394,
                  "column": 4
                },
                "end": {
                  "line": 398,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_clearSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 400,
                  "column": 4
                },
                "end": {
                  "line": 405,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onEnter",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 407,
                  "column": 4
                },
                "end": {
                  "line": 416,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onEscape",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 418,
                  "column": 4
                },
                "end": {
                  "line": 429,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_toggleElementChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 431,
                  "column": 4
                },
                "end": {
                  "line": 436,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "toggleElement"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_clear",
              "description": "Clears the current value.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 451,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "cancel",
              "description": "Reverts back to original value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 456,
                  "column": 4
                },
                "end": {
                  "line": 461,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 463,
                  "column": 4
                },
                "end": {
                  "line": 483,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 485,
                  "column": 4
                },
                "end": {
                  "line": 524,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_inputValueChanged",
              "description": "Filtering and items handling",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 529,
                  "column": 4
                },
                "end": {
                  "line": 535,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filterFromInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 537,
                  "column": 4
                },
                "end": {
                  "line": 550,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filterChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 552,
                  "column": 4
                },
                "end": {
                  "line": 564,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "filter"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_loadingChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 566,
                  "column": 4
                },
                "end": {
                  "line": 570,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "loading"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_revertInputValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 572,
                  "column": 4
                },
                "end": {
                  "line": 579,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_revertInputValueToValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 581,
                  "column": 4
                },
                "end": {
                  "line": 587,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_updateHasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 589,
                  "column": 4
                },
                "end": {
                  "line": 595,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "hasValue"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_selectedItemChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 597,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedItem"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 628,
                  "column": 4
                },
                "end": {
                  "line": 652,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldVal"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_detectAndDispatchChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 654,
                  "column": 4
                },
                "end": {
                  "line": 659,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_itemsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 661,
                  "column": 4
                },
                "end": {
                  "line": 676,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filteredItemsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 678,
                  "column": 4
                },
                "end": {
                  "line": 695,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filterItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 697,
                  "column": 4
                },
                "end": {
                  "line": 707,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "arr"
                },
                {
                  "name": "filter"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_setOverlayItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 709,
                  "column": 4
                },
                "end": {
                  "line": 713,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "items"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_indexOfValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 715,
                  "column": 4
                },
                "end": {
                  "line": 725,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "items"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_isValidValue",
              "description": "Checks if the value is supported as an item value in this control.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 732,
                  "column": 4
                },
                "end": {
                  "line": 734,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "boolean"
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_overlaySelectedItemChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 736,
                  "column": 4
                },
                "end": {
                  "line": 747,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriately.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 755,
                  "column": 4
                },
                "end": {
                  "line": 757,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriately"
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nYou can override the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 764,
                  "column": 4
                },
                "end": {
                  "line": 768,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_ensureTemplatized",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 779,
                  "column": 4
                },
                "end": {
                  "line": 797,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_preventInputBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 799,
                  "column": 4
                },
                "end": {
                  "line": 806,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_restoreInputBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 808,
                  "column": 4
                },
                "end": {
                  "line": 815,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 817,
                  "column": 4
                },
                "end": {
                  "line": 819,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_stopPropagation",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 821,
                  "column": 4
                },
                "end": {
                  "line": 823,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 6
                },
                "end": {
                  "line": 118,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 120,
                  "column": 6
                },
                "end": {
                  "line": 124,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ComboBoxLightElement",
          "attributes": [
            {
              "name": "opened",
              "description": "True if the dropdown is open, false otherwise.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "disabled",
              "description": "Set to true to disable this element.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 35,
                  "column": 8
                },
                "end": {
                  "line": 39,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "readonly",
              "description": "When present, it specifies that the element field is read-only.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "items",
              "description": "A full set of items to filter the visible options from.\nThe items can be of either `String` or `Object` type.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "allow-custom-value",
              "description": "If `true`, the user can input a value that is not present in the items list.\n`value` property will be set to the input value in this case.\nAlso, when `value` is set programmatically, the input value will be set\nto reflect that value.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filtered-items",
              "description": "A subset of items, filtered based on the user input. Filtered items\ncan be assigned directly to omit the internal filtering functionality.\nThe items can be of either `String` or `Object` type.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "value",
              "description": "The `String` value for the selected item of the combo box. Provides\nthe value for `iron-form`.\n\nWhen there’s no item selected, the value is an empty string.\n\nUse `selectedItem` property to get the raw selected item from\nthe `items` array.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "loading",
              "description": "When set to `true`, \"loading\" attribute is added to host and the overlay element.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 102,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filter",
              "description": "Filtering string the user has typed into the input field.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "selected-item",
              "description": "The selected item from the `items` array.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 125,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "item-label-path",
              "description": "Path for label of the item. If `items` is an array of objects, the\n`itemLabelPath` is used to fetch the displayed string label for each\nitem.\n\nThe item label is also used for matching items when processing user\ninput, i.e., for filtering and selecting items.\n\nWhen using item templates, the property is still needed because it is used\nfor filtering, and for displaying the selected item value in the input box.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 144,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "item-value-path",
              "description": "Path for the value of the item. If `items` is an array of objects, the\n`itemValuePath:` is used to fetch the string value for the selected\nitem.\n\nThe item value is used in the `value` property of the combo box,\nto provide the form value.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "invalid",
              "description": "Set to true if the value is invalid.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "attr-for-value",
              "description": "Name of the two-way data-bindable property representing the\nvalue of the custom input field.",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 10
                },
                "end": {
                  "line": 92,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "input-element",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 10
                },
                "end": {
                  "line": 97,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Element"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "change",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "type": "CustomEvent",
              "name": "custom-value-set",
              "description": "custom-value-set",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "type": "CustomEvent",
              "name": "selected-item-changed",
              "description": "selected-item-changed",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "type": "CustomEvent",
              "name": "value-changed",
              "description": "value-changed",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "src/vaadin-combo-box-light.html",
                "start": {
                  "line": 15,
                  "column": 4
                },
                "end": {
                  "line": 15,
                  "column": 17
                }
              }
            }
          ],
          "tagname": "vaadin-combo-box-light",
          "mixins": [
            "Vaadin.ComboBoxMixin",
            "Vaadin.ThemableMixin"
          ]
        },
        {
          "description": "`<vaadin-combo-box>` is a combo box element combining a dropdown list with an\ninput field for filtering the list of items. If you want to replace the default\ninput field with a custom implementation, you should use the\n[`<vaadin-combo-box-light>`](#/elements/vaadin-combo-box-light) element.\n\nItems in the dropdown list must be provided as a list of `String` values.\nDefining the items is done using the `items` property, which can be assigned\nwith data-binding, using an attribute or directly with the JavaScript property.\n\n```html\n<vaadin-combo-box\n    label=\"Fruit\"\n    items=\"[[data]]\">\n</vaadin-combo-box>\n```\n\n```js\ncombobox.items = ['apple', 'orange', 'banana'];\n```\n\nWhen the selected `value` is changed, a `value-changed` event is triggered.\n\nThis element can be used within an `iron-form`.\n\n### Item Template\n\n`<vaadin-combo-box>` supports using custom item template provided in the light\nDOM:\n\n```html\n<vaadin-combo-box items='[{\"label\": \"Hydrogen\", \"value\": \"H\"}]'>\n  <template>\n    [[index]]: [[item.label]] <b>[[item.value]</b>\n  </template>\n</vaadin-combo-box>\n```\n\nThe following properties are available for item template bindings:\n\nProperty name | Type | Description\n--------------|------|------------\n`index`| Number | Index of the item in the `items` array\n`item` | String or Object | The item reference\n`selected` | Boolean | True when item is selected\n`focused` | Boolean | True when item is focused\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|-------------\n`--vaadin-combo-box-overlay-max-height` | Property that determines the max height of overlay | `65vh`\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description\n----------------|----------------\n`text-field` | The text field\n`clear-button` | The clear button\n`toggle-button` | The toggle button\n\nSee [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\nfor `<vaadin-combo-box-overlay>` parts.\n\nSee [`<vaadin-text-field>` documentation](https://vaadin.com/components/vaadin-text-field/html-api/elements/Vaadin.TextFieldElement)\nfor the text field parts.\n\nThe following state attributes are available for styling:\n\nAttribute    | Description | Part name\n-------------|-------------|------------\n`opened` | Set when the combo box dropdown is open | :host\n`disabled` | Set to a disabled combo box | :host\n`readonly` | Set to a read only combo box | :host\n`has-value` | Set when the element has a value | :host\n`invalid` | Set when the element is invalid | :host\n`focused` | Set when the element is focused | :host\n`focus-ring` | Set when the element is keyboard focused | :host\n`loading` | Set when new items are expected | :host\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-combo-box.html",
          "properties": [
            {
              "name": "autofocus",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 249,
                  "column": 12
                },
                "end": {
                  "line": 251,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_previousTabIndex",
              "type": "number",
              "description": "Stores the previous value of tabindex attribute of the disabled element",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "Set to true to disable this input.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 223,
                  "column": 12
                },
                "end": {
                  "line": 226,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "_isShiftTabbing",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "opened",
              "type": "boolean",
              "description": "True if the dropdown is open, false otherwise.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_openedChanged\""
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "readonly",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 12
                },
                "end": {
                  "line": 264,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "items",
              "type": "Array",
              "description": "A full set of items to filter the visible options from.\nThe items can be of either `String` or `Object` type.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "allowCustomValue",
              "type": "boolean",
              "description": "If `true`, the user can input a value that is not present in the items list.\n`value` property will be set to the input value in this case.\nAlso, when `value` is set programmatically, the input value will be set\nto reflect that value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filteredItems",
              "type": "Array",
              "description": "A subset of items, filtered based on the user input. Filtered items\ncan be assigned directly to omit the internal filtering functionality.\nThe items can be of either `String` or `Object` type.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "value",
              "type": "string",
              "description": "The `String` value for the selected item of the combo box. Provides\nthe value for `iron-form`.\n\nWhen there’s no item selected, the value is an empty string.\n\nUse `selectedItem` property to get the raw selected item from\nthe `items` array.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\""
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_lastCommittedValue",
              "type": "string",
              "description": "Used to detect user value changes and fire `change` events.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 97,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "loading",
              "type": "boolean",
              "description": "When set to `true`, \"loading\" attribute is added to host and the overlay element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 102,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_focusedIndex",
              "type": "number",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 108,
                  "column": 8
                },
                "end": {
                  "line": 111,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "-1",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filter",
              "type": "string",
              "description": "Filtering string the user has typed into the input field.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "selectedItem",
              "type": "Object",
              "description": "The selected item from the `items` array.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 125,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "itemLabelPath",
              "type": "string",
              "description": "Path for label of the item. If `items` is an array of objects, the\n`itemLabelPath` is used to fetch the displayed string label for each\nitem.\n\nThe item label is also used for matching items when processing user\ninput, i.e., for filtering and selecting items.\n\nWhen using item templates, the property is still needed because it is used\nfor filtering, and for displaying the selected item value in the input box.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 144,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"label\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "itemValuePath",
              "type": "string",
              "description": "Path for the value of the item. If `items` is an array of objects, the\n`itemValuePath:` is used to fetch the string value for the selected\nitem.\n\nThe item value is used in the `value` property of the combo box,\nto provide the form value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\"",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "invalid",
              "type": "boolean",
              "description": "Set to true if the value is invalid.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_toggleElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 176,
                  "column": 8
                },
                "end": {
                  "line": 176,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_clearElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 177,
                  "column": 8
                },
                "end": {
                  "line": 177,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_inputElementValue",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 179,
                  "column": 8
                },
                "end": {
                  "line": 179,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_closeOnBlurIsPrevented",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 181,
                  "column": 8
                },
                "end": {
                  "line": 181,
                  "column": 40
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_previousDocumentPointerEvents",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 183,
                  "column": 8
                },
                "end": {
                  "line": 183,
                  "column": 46
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "label",
              "type": "string",
              "description": "The label for this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 207,
                  "column": 12
                },
                "end": {
                  "line": 210,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "required",
              "type": "boolean",
              "description": "Set to true to mark the input as required.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 215,
                  "column": 12
                },
                "end": {
                  "line": 218,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "preventInvalidInput",
              "type": "boolean",
              "description": "Set to true to prevent the user from entering invalid input.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 231,
                  "column": 12
                },
                "end": {
                  "line": 233,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "pattern",
              "type": "string",
              "description": "A pattern to validate the `input` with.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 238,
                  "column": 12
                },
                "end": {
                  "line": 240,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "The error message to display when the input is invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 245,
                  "column": 12
                },
                "end": {
                  "line": 247,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "placeholder",
              "type": "string",
              "description": "A placeholder string in addition to the label.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 256,
                  "column": 12
                },
                "end": {
                  "line": 259,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 284,
                  "column": 8
                },
                "end": {
                  "line": 294,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 296,
                  "column": 8
                },
                "end": {
                  "line": 299,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 301,
                  "column": 8
                },
                "end": {
                  "line": 304,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 141,
                  "column": 4
                },
                "end": {
                  "line": 155,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focused"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 157,
                  "column": 4
                },
                "end": {
                  "line": 159,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeyupListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 161,
                  "column": 4
                },
                "end": {
                  "line": 163,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 174,
                  "column": 4
                },
                "end": {
                  "line": 181,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focus",
              "description": "Moving the focus from the host element causes firing of the blur event what leads to problems in IE.",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 187,
                  "column": 4
                },
                "end": {
                  "line": 194,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "blur",
              "description": "Native bluring in the host element does nothing because it does not have the focus.\nIn chrome it works, but not in FF.",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 201,
                  "column": 4
                },
                "end": {
                  "line": 204,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_disabledChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 206,
                  "column": 4
                },
                "end": {
                  "line": 219,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "disabled"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_tabindexChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 221,
                  "column": 4
                },
                "end": {
                  "line": 237,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "tabindex"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "open",
              "description": "Opens the dropdown list.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 233,
                  "column": 4
                },
                "end": {
                  "line": 238,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "close",
              "description": "Closes the dropdown list.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 243,
                  "column": 4
                },
                "end": {
                  "line": 245,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 247,
                  "column": 4
                },
                "end": {
                  "line": 266,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "old"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onOverlayTouchStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 268,
                  "column": 4
                },
                "end": {
                  "line": 274,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onClick",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 276,
                  "column": 4
                },
                "end": {
                  "line": 292,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onKeyDown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 298,
                  "column": 4
                },
                "end": {
                  "line": 318,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_isEventKey",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 320,
                  "column": 4
                },
                "end": {
                  "line": 322,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "k"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_getItemLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 324,
                  "column": 4
                },
                "end": {
                  "line": 326,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_getItemValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 328,
                  "column": 4
                },
                "end": {
                  "line": 334,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onArrowDown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 336,
                  "column": 4
                },
                "end": {
                  "line": 345,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onArrowUp",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 347,
                  "column": 4
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_prefillFocusedItemLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 374,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 376,
                  "column": 4
                },
                "end": {
                  "line": 392,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "start"
                },
                {
                  "name": "end"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_markAllSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 394,
                  "column": 4
                },
                "end": {
                  "line": 398,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_clearSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 400,
                  "column": 4
                },
                "end": {
                  "line": 405,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onEnter",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 407,
                  "column": 4
                },
                "end": {
                  "line": 416,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onEscape",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 418,
                  "column": 4
                },
                "end": {
                  "line": 429,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_toggleElementChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 431,
                  "column": 4
                },
                "end": {
                  "line": 436,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "toggleElement"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_clear",
              "description": "Clears the current value.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 451,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "cancel",
              "description": "Reverts back to original value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 456,
                  "column": 4
                },
                "end": {
                  "line": 461,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 463,
                  "column": 4
                },
                "end": {
                  "line": 483,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_onClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 485,
                  "column": 4
                },
                "end": {
                  "line": 524,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_inputValueChanged",
              "description": "Filtering and items handling",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 529,
                  "column": 4
                },
                "end": {
                  "line": 535,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filterFromInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 537,
                  "column": 4
                },
                "end": {
                  "line": 550,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filterChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 552,
                  "column": 4
                },
                "end": {
                  "line": 564,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "filter"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_loadingChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 566,
                  "column": 4
                },
                "end": {
                  "line": 570,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "loading"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_revertInputValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 572,
                  "column": 4
                },
                "end": {
                  "line": 579,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_revertInputValueToValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 581,
                  "column": 4
                },
                "end": {
                  "line": 587,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_updateHasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 589,
                  "column": 4
                },
                "end": {
                  "line": 595,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "hasValue"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_selectedItemChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 597,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedItem"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 628,
                  "column": 4
                },
                "end": {
                  "line": 652,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldVal"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_detectAndDispatchChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 654,
                  "column": 4
                },
                "end": {
                  "line": 659,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_itemsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 661,
                  "column": 4
                },
                "end": {
                  "line": 676,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filteredItemsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 678,
                  "column": 4
                },
                "end": {
                  "line": 695,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_filterItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 697,
                  "column": 4
                },
                "end": {
                  "line": 707,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "arr"
                },
                {
                  "name": "filter"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_setOverlayItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 709,
                  "column": 4
                },
                "end": {
                  "line": 713,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "items"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_indexOfValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 715,
                  "column": 4
                },
                "end": {
                  "line": 725,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "items"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_isValidValue",
              "description": "Checks if the value is supported as an item value in this control.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 732,
                  "column": 4
                },
                "end": {
                  "line": 734,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "boolean"
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_overlaySelectedItemChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 736,
                  "column": 4
                },
                "end": {
                  "line": 747,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriately.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 755,
                  "column": 4
                },
                "end": {
                  "line": 757,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriately"
              },
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nYou can override the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 764,
                  "column": 4
                },
                "end": {
                  "line": 768,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_ensureTemplatized",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 779,
                  "column": 4
                },
                "end": {
                  "line": 797,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_preventInputBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 799,
                  "column": 4
                },
                "end": {
                  "line": 806,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_restoreInputBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 808,
                  "column": 4
                },
                "end": {
                  "line": 815,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 817,
                  "column": 4
                },
                "end": {
                  "line": 819,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "_stopPropagation",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 821,
                  "column": 4
                },
                "end": {
                  "line": 823,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "attributeChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 272,
                  "column": 8
                },
                "end": {
                  "line": 282,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "name"
                },
                {
                  "name": "type"
                }
              ]
            },
            {
              "name": "_getPositionTarget",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 306,
                  "column": 8
                },
                "end": {
                  "line": 308,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_updateAriaExpanded",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 310,
                  "column": 8
                },
                "end": {
                  "line": 315,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ComboBoxElement",
          "attributes": [
            {
              "name": "autofocus",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 249,
                  "column": 12
                },
                "end": {
                  "line": 251,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "disabled",
              "description": "Set to true to disable this input.",
              "sourceRange": {
                "start": {
                  "line": 223,
                  "column": 12
                },
                "end": {
                  "line": 226,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "opened",
              "description": "True if the dropdown is open, false otherwise.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "readonly",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 12
                },
                "end": {
                  "line": 264,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "items",
              "description": "A full set of items to filter the visible options from.\nThe items can be of either `String` or `Object` type.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "allow-custom-value",
              "description": "If `true`, the user can input a value that is not present in the items list.\n`value` property will be set to the input value in this case.\nAlso, when `value` is set programmatically, the input value will be set\nto reflect that value.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filtered-items",
              "description": "A subset of items, filtered based on the user input. Filtered items\ncan be assigned directly to omit the internal filtering functionality.\nThe items can be of either `String` or `Object` type.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "value",
              "description": "The `String` value for the selected item of the combo box. Provides\nthe value for `iron-form`.\n\nWhen there’s no item selected, the value is an empty string.\n\nUse `selectedItem` property to get the raw selected item from\nthe `items` array.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "loading",
              "description": "When set to `true`, \"loading\" attribute is added to host and the overlay element.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 102,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "filter",
              "description": "Filtering string the user has typed into the input field.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "selected-item",
              "description": "The selected item from the `items` array.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 125,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "item-label-path",
              "description": "Path for label of the item. If `items` is an array of objects, the\n`itemLabelPath` is used to fetch the displayed string label for each\nitem.\n\nThe item label is also used for matching items when processing user\ninput, i.e., for filtering and selecting items.\n\nWhen using item templates, the property is still needed because it is used\nfor filtering, and for displaying the selected item value in the input box.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 144,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "item-value-path",
              "description": "Path for the value of the item. If `items` is an array of objects, the\n`itemValuePath:` is used to fetch the string value for the selected\nitem.\n\nThe item value is used in the `value` property of the combo box,\nto provide the form value.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "invalid",
              "description": "Set to true if the value is invalid.",
              "sourceRange": {
                "file": "vaadin-combo-box-mixin.html",
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "name": "label",
              "description": "The label for this element.",
              "sourceRange": {
                "start": {
                  "line": 207,
                  "column": 12
                },
                "end": {
                  "line": 210,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "required",
              "description": "Set to true to mark the input as required.",
              "sourceRange": {
                "start": {
                  "line": 215,
                  "column": 12
                },
                "end": {
                  "line": 218,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "prevent-invalid-input",
              "description": "Set to true to prevent the user from entering invalid input.",
              "sourceRange": {
                "start": {
                  "line": 231,
                  "column": 12
                },
                "end": {
                  "line": 233,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "pattern",
              "description": "A pattern to validate the `input` with.",
              "sourceRange": {
                "start": {
                  "line": 238,
                  "column": 12
                },
                "end": {
                  "line": 240,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "error-message",
              "description": "The error message to display when the input is invalid.",
              "sourceRange": {
                "start": {
                  "line": 245,
                  "column": 12
                },
                "end": {
                  "line": 247,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "placeholder",
              "description": "A placeholder string in addition to the label.",
              "sourceRange": {
                "start": {
                  "line": 256,
                  "column": 12
                },
                "end": {
                  "line": 259,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "change",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "type": "CustomEvent",
              "name": "custom-value-set",
              "description": "custom-value-set",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "type": "CustomEvent",
              "name": "selected-item-changed",
              "description": "selected-item-changed",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            },
            {
              "type": "CustomEvent",
              "name": "value-changed",
              "description": "value-changed",
              "metadata": {},
              "inheritedFrom": "Vaadin.ComboBoxMixin"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "prefix",
              "range": {
                "file": "src/vaadin-combo-box.html",
                "start": {
                  "line": 78,
                  "column": 6
                },
                "end": {
                  "line": 78,
                  "column": 47
                }
              }
            }
          ],
          "tagname": "vaadin-combo-box",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ControlStateMixin",
            "Vaadin.ComboBoxMixin",
            "Vaadin.ThemableMixin"
          ]
        }
      ],
      "mixins": [
        {
          "description": "",
          "summary": "",
          "path": "src/vaadin-combo-box-mixin.html",
          "properties": [
            {
              "name": "opened",
              "type": "boolean",
              "description": "True if the dropdown is open, false otherwise.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_openedChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "Set to true to disable this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 35,
                  "column": 8
                },
                "end": {
                  "line": 39,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "readonly",
              "type": "boolean",
              "description": "When present, it specifies that the element field is read-only.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "items",
              "type": "Array",
              "description": "A full set of items to filter the visible options from.\nThe items can be of either `String` or `Object` type.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "allowCustomValue",
              "type": "boolean",
              "description": "If `true`, the user can input a value that is not present in the items list.\n`value` property will be set to the input value in this case.\nAlso, when `value` is set programmatically, the input value will be set\nto reflect that value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "filteredItems",
              "type": "Array",
              "description": "A subset of items, filtered based on the user input. Filtered items\ncan be assigned directly to omit the internal filtering functionality.\nThe items can be of either `String` or `Object` type.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "value",
              "type": "string",
              "description": "The `String` value for the selected item of the combo box. Provides\nthe value for `iron-form`.\n\nWhen there’s no item selected, the value is an empty string.\n\nUse `selectedItem` property to get the raw selected item from\nthe `items` array.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\""
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "_lastCommittedValue",
              "type": "string",
              "description": "Used to detect user value changes and fire `change` events.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 97,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "loading",
              "type": "boolean",
              "description": "When set to `true`, \"loading\" attribute is added to host and the overlay element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "_focusedIndex",
              "type": "number",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 108,
                  "column": 8
                },
                "end": {
                  "line": 111,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "-1"
            },
            {
              "name": "filter",
              "type": "string",
              "description": "Filtering string the user has typed into the input field.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "selectedItem",
              "type": "Object",
              "description": "The selected item from the `items` array.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "itemLabelPath",
              "type": "string",
              "description": "Path for label of the item. If `items` is an array of objects, the\n`itemLabelPath` is used to fetch the displayed string label for each\nitem.\n\nThe item label is also used for matching items when processing user\ninput, i.e., for filtering and selecting items.\n\nWhen using item templates, the property is still needed because it is used\nfor filtering, and for displaying the selected item value in the input box.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 144,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"label\""
            },
            {
              "name": "itemValuePath",
              "type": "string",
              "description": "Path for the value of the item. If `items` is an array of objects, the\n`itemValuePath:` is used to fetch the string value for the selected\nitem.\n\nThe item value is used in the `value` property of the combo box,\nto provide the form value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"value\""
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "invalid",
              "type": "boolean",
              "description": "Set to true if the value is invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_toggleElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 176,
                  "column": 8
                },
                "end": {
                  "line": 176,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_clearElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 8
                },
                "end": {
                  "line": 177,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_inputElementValue",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 179,
                  "column": 8
                },
                "end": {
                  "line": 179,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_closeOnBlurIsPrevented",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 181,
                  "column": 8
                },
                "end": {
                  "line": 181,
                  "column": 40
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_previousDocumentPointerEvents",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 183,
                  "column": 8
                },
                "end": {
                  "line": 183,
                  "column": 46
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 198,
                  "column": 4
                },
                "end": {
                  "line": 228,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "open",
              "description": "Opens the dropdown list.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 233,
                  "column": 4
                },
                "end": {
                  "line": 238,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "close",
              "description": "Closes the dropdown list.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 243,
                  "column": 4
                },
                "end": {
                  "line": 245,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 247,
                  "column": 4
                },
                "end": {
                  "line": 266,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "old"
                }
              ]
            },
            {
              "name": "_onOverlayTouchStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 268,
                  "column": 4
                },
                "end": {
                  "line": 274,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onClick",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 276,
                  "column": 4
                },
                "end": {
                  "line": 292,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_onKeyDown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 298,
                  "column": 4
                },
                "end": {
                  "line": 318,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_isEventKey",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 320,
                  "column": 4
                },
                "end": {
                  "line": 322,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "k"
                }
              ]
            },
            {
              "name": "_getItemLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 324,
                  "column": 4
                },
                "end": {
                  "line": 326,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ]
            },
            {
              "name": "_getItemValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 328,
                  "column": 4
                },
                "end": {
                  "line": 334,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                }
              ]
            },
            {
              "name": "_onArrowDown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 336,
                  "column": 4
                },
                "end": {
                  "line": 345,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onArrowUp",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 347,
                  "column": 4
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_prefillFocusedItemLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 374,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 376,
                  "column": 4
                },
                "end": {
                  "line": 392,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "start"
                },
                {
                  "name": "end"
                }
              ]
            },
            {
              "name": "_markAllSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 394,
                  "column": 4
                },
                "end": {
                  "line": 398,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_clearSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 400,
                  "column": 4
                },
                "end": {
                  "line": 405,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onEnter",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 407,
                  "column": 4
                },
                "end": {
                  "line": 416,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_onEscape",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 418,
                  "column": 4
                },
                "end": {
                  "line": 429,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_toggleElementChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 431,
                  "column": 4
                },
                "end": {
                  "line": 436,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "toggleElement"
                }
              ]
            },
            {
              "name": "_clear",
              "description": "Clears the current value.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 451,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "cancel",
              "description": "Reverts back to original value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 456,
                  "column": 4
                },
                "end": {
                  "line": 461,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 463,
                  "column": 4
                },
                "end": {
                  "line": 483,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 485,
                  "column": 4
                },
                "end": {
                  "line": 524,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_inputValueChanged",
              "description": "Filtering and items handling",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 529,
                  "column": 4
                },
                "end": {
                  "line": 535,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_filterFromInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 537,
                  "column": 4
                },
                "end": {
                  "line": 550,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_filterChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 552,
                  "column": 4
                },
                "end": {
                  "line": 564,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "filter"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ]
            },
            {
              "name": "_loadingChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 566,
                  "column": 4
                },
                "end": {
                  "line": 570,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "loading"
                }
              ]
            },
            {
              "name": "_revertInputValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 572,
                  "column": 4
                },
                "end": {
                  "line": 579,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_revertInputValueToValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 581,
                  "column": 4
                },
                "end": {
                  "line": 587,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_updateHasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 589,
                  "column": 4
                },
                "end": {
                  "line": 595,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "hasValue"
                }
              ]
            },
            {
              "name": "_selectedItemChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 597,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedItem"
                }
              ]
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 628,
                  "column": 4
                },
                "end": {
                  "line": 652,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldVal"
                }
              ]
            },
            {
              "name": "_detectAndDispatchChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 654,
                  "column": 4
                },
                "end": {
                  "line": 659,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_itemsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 661,
                  "column": 4
                },
                "end": {
                  "line": 676,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ]
            },
            {
              "name": "_filteredItemsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 678,
                  "column": 4
                },
                "end": {
                  "line": 695,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                },
                {
                  "name": "itemValuePath"
                },
                {
                  "name": "itemLabelPath"
                }
              ]
            },
            {
              "name": "_filterItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 697,
                  "column": 4
                },
                "end": {
                  "line": 707,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "arr"
                },
                {
                  "name": "filter"
                }
              ]
            },
            {
              "name": "_setOverlayItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 709,
                  "column": 4
                },
                "end": {
                  "line": 713,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "items"
                }
              ]
            },
            {
              "name": "_indexOfValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 715,
                  "column": 4
                },
                "end": {
                  "line": 725,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "items"
                }
              ]
            },
            {
              "name": "_isValidValue",
              "description": "Checks if the value is supported as an item value in this control.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 732,
                  "column": 4
                },
                "end": {
                  "line": 734,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "boolean"
              }
            },
            {
              "name": "_overlaySelectedItemChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 736,
                  "column": 4
                },
                "end": {
                  "line": 747,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriately.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 755,
                  "column": 4
                },
                "end": {
                  "line": 757,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriately"
              }
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nYou can override the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 764,
                  "column": 4
                },
                "end": {
                  "line": 768,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_ensureTemplatized",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 779,
                  "column": 4
                },
                "end": {
                  "line": 797,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_preventInputBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 799,
                  "column": 4
                },
                "end": {
                  "line": 806,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_restoreInputBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 808,
                  "column": 4
                },
                "end": {
                  "line": 815,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 817,
                  "column": 4
                },
                "end": {
                  "line": 819,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_stopPropagation",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 821,
                  "column": 4
                },
                "end": {
                  "line": 823,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 852,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "Vaadin.ComboBoxMixin",
          "attributes": [
            {
              "name": "opened",
              "description": "True if the dropdown is open, false otherwise.",
              "sourceRange": {
                "start": {
                  "line": 24,
                  "column": 8
                },
                "end": {
                  "line": 30,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "disabled",
              "description": "Set to true to disable this element.",
              "sourceRange": {
                "start": {
                  "line": 35,
                  "column": 8
                },
                "end": {
                  "line": 39,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "readonly",
              "description": "When present, it specifies that the element field is read-only.",
              "sourceRange": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "items",
              "description": "A full set of items to filter the visible options from.\nThe items can be of either `String` or `Object` type.",
              "sourceRange": {
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 56,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "allow-custom-value",
              "description": "If `true`, the user can input a value that is not present in the items list.\n`value` property will be set to the input value in this case.\nAlso, when `value` is set programmatically, the input value will be set\nto reflect that value.",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "filtered-items",
              "description": "A subset of items, filtered based on the user input. Filtered items\ncan be assigned directly to omit the internal filtering functionality.\nThe items can be of either `String` or `Object` type.",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "value",
              "description": "The `String` value for the selected item of the combo box. Provides\nthe value for `iron-form`.\n\nWhen there’s no item selected, the value is an empty string.\n\nUse `selectedItem` property to get the raw selected item from\nthe `items` array.",
              "sourceRange": {
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "loading",
              "description": "When set to `true`, \"loading\" attribute is added to host and the overlay element.",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 8
                },
                "end": {
                  "line": 106,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "filter",
              "description": "Filtering string the user has typed into the input field.",
              "sourceRange": {
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "selected-item",
              "description": "The selected item from the `items` array.",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "item-label-path",
              "description": "Path for label of the item. If `items` is an array of objects, the\n`itemLabelPath` is used to fetch the displayed string label for each\nitem.\n\nThe item label is also used for matching items when processing user\ninput, i.e., for filtering and selecting items.\n\nWhen using item templates, the property is still needed because it is used\nfor filtering, and for displaying the selected item value in the input box.",
              "sourceRange": {
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 144,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "item-value-path",
              "description": "Path for the value of the item. If `items` is an array of objects, the\n`itemValuePath:` is used to fetch the string value for the selected\nitem.\n\nThe item value is used in the `value` property of the combo box,\nto provide the form value.",
              "sourceRange": {
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "invalid",
              "description": "Set to true if the value is invalid.",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "change",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "custom-value-set",
              "description": "custom-value-set",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "selected-item-changed",
              "description": "selected-item-changed",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "value-changed",
              "description": "value-changed",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "classes": [
    {
      "description": "Element for internal use only.",
      "summary": "",
      "path": "src/vaadin-combo-box-dropdown-wrapper.html",
      "properties": [
        {
          "name": "__dataClientsReady",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1147,
              "column": 8
            },
            "end": {
              "line": 1147,
              "column": 32
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataPendingClients",
          "type": "Array",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1149,
              "column": 8
            },
            "end": {
              "line": 1149,
              "column": 34
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataToNotify",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1151,
              "column": 8
            },
            "end": {
              "line": 1151,
              "column": 28
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataLinkedPaths",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1153,
              "column": 8
            },
            "end": {
              "line": 1153,
              "column": 31
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataHasPaths",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1155,
              "column": 8
            },
            "end": {
              "line": 1155,
              "column": 28
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataCompoundStorage",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1157,
              "column": 8
            },
            "end": {
              "line": 1157,
              "column": 35
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataHost",
          "type": "Polymer_PropertyEffects",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1159,
              "column": 8
            },
            "end": {
              "line": 1159,
              "column": 24
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataTemp",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1161,
              "column": 8
            },
            "end": {
              "line": 1161,
              "column": 24
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataClientsInitialized",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1163,
              "column": 8
            },
            "end": {
              "line": 1163,
              "column": 38
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__data",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1165,
              "column": 8
            },
            "end": {
              "line": 1165,
              "column": 20
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataPending",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1167,
              "column": 8
            },
            "end": {
              "line": 1167,
              "column": 27
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataOld",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1169,
              "column": 8
            },
            "end": {
              "line": 1169,
              "column": 23
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__computeEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1171,
              "column": 8
            },
            "end": {
              "line": 1171,
              "column": 30
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__reflectEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1173,
              "column": 8
            },
            "end": {
              "line": 1173,
              "column": 30
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__notifyEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1175,
              "column": 8
            },
            "end": {
              "line": 1175,
              "column": 29
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__propagateEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1177,
              "column": 8
            },
            "end": {
              "line": 1177,
              "column": 32
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__observeEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1179,
              "column": 8
            },
            "end": {
              "line": 1179,
              "column": 30
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__readOnly",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1181,
              "column": 8
            },
            "end": {
              "line": 1181,
              "column": 24
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__templateInfo",
          "type": "!TemplateInfo",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1183,
              "column": 8
            },
            "end": {
              "line": 1183,
              "column": 28
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_template",
          "type": "HTMLTemplateElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 421,
              "column": 8
            },
            "end": {
              "line": 421,
              "column": 23
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_importPath",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 423,
              "column": 8
            },
            "end": {
              "line": 423,
              "column": 25
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "rootPath",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 425,
              "column": 8
            },
            "end": {
              "line": 425,
              "column": 22
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "importPath",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 427,
              "column": 8
            },
            "end": {
              "line": 427,
              "column": 24
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "root",
          "type": "(StampedTemplate | HTMLElement | ShadowRoot)",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 429,
              "column": 8
            },
            "end": {
              "line": 429,
              "column": 18
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "$",
          "type": "!Object.<string, !Element>",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 431,
              "column": 8
            },
            "end": {
              "line": 431,
              "column": 15
            }
          },
          "metadata": {},
          "inheritedFrom": "Polymer.ElementMixin"
        }
      ],
      "methods": [
        {
          "name": "_stampTemplate",
          "description": "Stamps the provided template and performs instance-time setup for\nPolymer template features, including data bindings, declarative event\nlisteners, and the `this.$` map of `id`'s to nodes.  A document fragment\nis returned containing the stamped DOM, ready for insertion into the\nDOM.\n\nThis method may be called more than once; however note that due to\n`shadycss` polyfill limitations, only styles from templates prepared\nusing `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\nto the shadow root and support CSS custom properties), and note that\n`ShadyCSS.prepareTemplate` may only be called once per element. As such,\nany styles required by in runtime-stamped templates must be included\nin the main element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2423,
              "column": 6
            },
            "end": {
              "line": 2448,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template to stamp"
            }
          ],
          "return": {
            "type": "!StampedTemplate",
            "desc": "Cloned template content"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addMethodEventListenerToNode",
          "description": "Adds an event listener by method name for the event provided.\n\nThis method generates a handler function that looks up the method\nname at handling time.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 452,
              "column": 6
            },
            "end": {
              "line": 457,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add listener on"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "methodName",
              "type": "string",
              "description": "Name of method"
            },
            {
              "name": "context",
              "type": "*=",
              "description": "Context the method will be called on (defaults\n  to `node`)"
            }
          ],
          "return": {
            "type": "Function",
            "desc": "Generated handler function"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 467,
              "column": 6
            },
            "end": {
              "line": 469,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 479,
              "column": 6
            },
            "end": {
              "line": 481,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_createPropertyAccessor",
          "description": "Creates a setter/getter pair for the named property with its own\nlocal storage.  The getter returns the value in the local storage,\nand the setter calls `_setProperty`, which updates the local storage\nfor the property and enqueues a `_propertiesChanged` callback.\n\nThis method may be called on a prototype or an instance.  Calling\nthis method may overwrite a property value that already exists on\nthe prototype/instance by creating the accessor.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "readOnly",
              "type": "boolean=",
              "description": "When true, no setter is created; the\n  protected `_setProperty` function must be used to set the property"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_addPropertyToAttributeMap",
          "description": "Adds the given `property` to a map matching attribute names\nto property names, using `attributeNameForProperty`. This map is\nused when deserializing attribute values to properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            }
          ],
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_definePropertyAccessor",
          "description": "Defines a property accessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 140,
              "column": 9
            },
            "end": {
              "line": 153,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "readOnly",
              "type": "boolean=",
              "description": "When true, no setter is created"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "ready",
          "description": "Stamps the element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 540,
              "column": 6
            },
            "end": {
              "line": 546,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeProperties",
          "description": "Overrides the default `Polymer.PropertyAccessors` to ensure class\nmetaprogramming related to property accessors and effects has\ncompleted (calls `finalize`).\n\nIt also initializes any property defaults provided via `value` in\n`properties` metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 446,
              "column": 6
            },
            "end": {
              "line": 480,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeInstanceProperties",
          "description": "Called at ready time with bag of instance properties that overwrote\naccessors when the element upgraded.\n\nThe default implementation sets these properties back into the\nsetter at ready time.  This method is provided as an override\npoint for customizing or providing more efficient initialization.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 222,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of property values that were overwritten\n  when creating property accessors."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_setProperty",
          "description": "Updates the local storage for a property (via `_setPendingProperty`)\nand enqueues a `_proeprtiesChanged` callback.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_getProperty",
          "description": "Returns the value for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of property"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value for the given property"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_setPendingProperty",
          "description": "Updates the local storage for a property, records the previous value,\nand adds it to the set of \"pending changes\" that will be passed to the\n`_propertiesChanged` callback.  This method does not enqueue the\n`_propertiesChanged` callback.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 264,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "ext",
              "type": "boolean=",
              "description": "Not used here; affordance for closure"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property changed"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_invalidateProperties",
          "description": "Marks the properties as invalid, and enqueues an async\n`_propertiesChanged` callback.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 290,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_enableProperties",
          "description": "Call to enable property accessor processing. Before this method is\ncalled accessor values will be set but side effects are\nqueued. When called, any pending side effects occur immediately.\nFor elements, generally `connectedCallback` is a normal spot to do so.\nIt is safe to call this method multiple times as it only turns on\nproperty accessors once.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 313,
              "column": 8
            },
            "end": {
              "line": 322,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_flushProperties",
          "description": "Calls the `_propertiesChanged` callback with the current set of\npending changes (and old values recorded when pending changes were\nset), and resets the pending set of changes. Generally, this method\nshould not be called in user code.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 333,
              "column": 8
            },
            "end": {
              "line": 342,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_shouldPropertiesChange",
          "description": "Called in `_flushProperties` to determine if `_propertiesChanged`\nshould be called. The default implementation returns true if\nproperties are pending. Override to customize when\n`_propertiesChanged` is called.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 356,
              "column": 8
            },
            "end": {
              "line": 358,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentProps",
              "type": "!Object",
              "description": "Bag of all current accessor values"
            },
            {
              "name": "changedProps",
              "type": "!Object",
              "description": "Bag of properties changed since the last\n  call to `_propertiesChanged`"
            },
            {
              "name": "oldProps",
              "type": "!Object",
              "description": "Bag of previous values for each property\n  in `changedProps`"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if changedProps is truthy"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_propertiesChanged",
          "description": "Callback called when any properties with accessors created via\n`_createPropertyAccessor` have been set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 372,
              "column": 8
            },
            "end": {
              "line": 373,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentProps",
              "type": "!Object",
              "description": "Bag of all current accessor values"
            },
            {
              "name": "changedProps",
              "type": "!Object",
              "description": "Bag of properties changed since the last\n  call to `_propertiesChanged`"
            },
            {
              "name": "oldProps",
              "type": "!Object",
              "description": "Bag of previous values for each property\n  in `changedProps`"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "Method called to determine whether a property value should be\nconsidered as a change and cause the `_propertiesChanged` callback\nto be enqueued.\n\nThe default implementation returns `true` if a strict equality\ncheck fails. The method always returns false for `NaN`.\n\nOverride this method to e.g. provide stricter checking for\nObjects/Arrays when using immutable patterns.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 393,
              "column": 8
            },
            "end": {
              "line": 400,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "value",
              "type": "*",
              "description": "New property value"
            },
            {
              "name": "old",
              "type": "*",
              "description": "Previous property value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether the property should be considered a change\n  and enqueue a `_proeprtiesChanged` callback"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Implements native Custom Elements `attributeChangedCallback` to\nset an attribute value to a property via `_attributeToProperty`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 419,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "string",
              "description": "Name of attribute that changed"
            },
            {
              "name": "old",
              "type": "?string",
              "description": "Old attribute value"
            },
            {
              "name": "value",
              "type": "?string",
              "description": "New attribute value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_attributeToProperty",
          "description": "Deserializes an attribute to its associated property.\n\nThis method calls the `_deserializeValue` method to convert the string to\na typed value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 433,
              "column": 8
            },
            "end": {
              "line": 440,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to deserialize."
            },
            {
              "name": "value",
              "type": "?string",
              "description": "of the attribute."
            },
            {
              "name": "type",
              "type": "*=",
              "description": "type to deserialize to, defaults to the value\nreturned from `typeForProperty`"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_propertyToAttribute",
          "description": "Serializes a property to its associated attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 452,
              "column": 8
            },
            "end": {
              "line": 458,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name to reflect."
            },
            {
              "name": "attribute",
              "type": "string=",
              "description": "Attribute name to reflect to."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Property value to refect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_valueToNodeAttribute",
          "description": "Sets a typed value to an HTML attribute on a node.\n\nThis method calls the `_serializeValue` method to convert the typed\nvalue to a string.  If the `_serializeValue` method returns `undefined`,\nthe attribute will be removed (this is the default for boolean\ntype `false`).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 473,
              "column": 8
            },
            "end": {
              "line": 480,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Element to set attribute to."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to serialize."
            },
            {
              "name": "attribute",
              "type": "string",
              "description": "Attribute name to serialize to."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_serializeValue",
          "description": "Converts a typed JavaScript value to a string.\n\nThis method is called when setting JS property values to\nHTML attributes.  Users may override this method to provide\nserialization for custom types.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 493,
              "column": 8
            },
            "end": {
              "line": 500,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "*",
              "description": "Property value to serialize."
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "String serialized from the provided\nproperty  value."
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_deserializeValue",
          "description": "Converts a string to a typed JavaScript value.\n\nThis method is called when reading HTML attribute values to\nJS properties.  Users may override this method to provide\ndeserialization for custom `type`s. Types for `Boolean`, `String`,\nand `Number` convert attributes to the expected types.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 514,
              "column": 8
            },
            "end": {
              "line": 523,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "?string",
              "description": "Value to deserialize."
            },
            {
              "name": "type",
              "type": "*=",
              "description": "Type to deserialize the string to."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Typed value deserialized from the provided string."
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_initializeProtoProperties",
          "description": "Overrides `Polymer.PropertyAccessors` implementation to provide a\nmore efficient implementation of initializing properties from\nthe prototype on the instance.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1217,
              "column": 6
            },
            "end": {
              "line": 1221,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Properties to initialize on the prototype"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_ensureAttribute",
          "description": "Ensures the element has the given attribute. If it does not,\nassigns the given value to the attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to ensure is set."
            },
            {
              "name": "value",
              "type": "string",
              "description": "of the attribute."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_hasAccessor",
          "description": "Returns true if this library created an accessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 299,
              "column": 6
            },
            "end": {
              "line": 301,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if an accessor was created"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_isPropertyPending",
          "description": "Returns true if the specified property has a pending change.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 310,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if property has a pending change"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_addPropertyEffect",
          "description": "Equivalent to static `addPropertyEffect` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1255,
              "column": 6
            },
            "end": {
              "line": 1263,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removePropertyEffect",
          "description": "Removes the given property effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1273,
              "column": 6
            },
            "end": {
              "line": 1279,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property the effect was associated with"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasPropertyEffect",
          "description": "Returns whether the current prototype/instance has a property effect\nof a certain type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1290,
              "column": 6
            },
            "end": {
              "line": 1293,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "type",
              "type": "string=",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReadOnlyEffect",
          "description": "Returns whether the current prototype/instance has a \"read only\"\naccessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1303,
              "column": 6
            },
            "end": {
              "line": 1305,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasNotifyEffect",
          "description": "Returns whether the current prototype/instance has a \"notify\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1315,
              "column": 6
            },
            "end": {
              "line": 1317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReflectEffect",
          "description": "Returns whether the current prototype/instance has a \"reflect to attribute\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1327,
              "column": 6
            },
            "end": {
              "line": 1329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasComputedEffect",
          "description": "Returns whether the current prototype/instance has a \"computed\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1339,
              "column": 6
            },
            "end": {
              "line": 1341,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setPendingPropertyOrPath",
          "description": "Sets a pending property or path.  If the root property of the path in\nquestion had no accessor, the path is set, otherwise it is enqueued\nvia `_setPendingProperty`.\n\nThis function isolates relatively expensive functionality necessary\nfor the public API (`set`, `setProperties`, `notifyPath`, and property\nchange listeners via {{...}} bindings), such that it is only done\nwhen paths enter the system, and not at every propagation step.  It\nalso sets a `__dataHasPaths` flag on the instance which is used to\nfast-path slower path-matching code in the property effects host paths.\n\n`path` can be a path string or array of path parts as accepted by the\npublic API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1373,
              "column": 6
            },
            "end": {
              "line": 1405,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(number | string)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "shouldNotify",
              "type": "boolean=",
              "description": "Set to true if this change should\n cause a property notification event dispatch"
            },
            {
              "name": "isPathNotification",
              "type": "boolean=",
              "description": "If the path being set is a path\n  notification of an already changed value, as opposed to a request\n  to set and notify the change.  In the latter `false` case, a dirty\n  check is performed and then the value is set to the path before\n  enqueuing the pending property change."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property/path was enqueued in\n  the pending changes bag."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setUnmanagedPropertyToNode",
          "description": "Applies a value to a non-Polymer element/node's property.\n\nThe implementation makes a best-effort at binding interop:\nSome native element properties have side-effects when\nre-setting the same value (e.g. setting `<input>.value` resets the\ncursor position), so we do a dirty-check before setting the value.\nHowever, for better interop with non-Polymer custom elements that\naccept objects, we explicitly re-set object changes coming from the\nPolymer world (which may include deep object changes without the\ntop reference changing), erring on the side of providing more\ninformation.\n\nUsers may override this method to provide alternate approaches.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1428,
              "column": 6
            },
            "end": {
              "line": 1436,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "The node to set a property on"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "The property to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "The value to set"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_enqueueClient",
          "description": "Enqueues the given client on a list of pending clients, whose\npending property changes can later be flushed via a call to\n`_flushClients`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1543,
              "column": 6
            },
            "end": {
              "line": 1548,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "client",
              "type": "Object",
              "description": "PropertyEffects client to enqueue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_flushClients",
          "description": "Flushes any clients previously enqueued via `_enqueueClient`, causing\ntheir `_flushProperties` method to run.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1569,
              "column": 6
            },
            "end": {
              "line": 1580,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__enableOrFlushClients",
          "description": "(c) the stamped dom enables.",
          "privacy": "private",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1594,
              "column": 6
            },
            "end": {
              "line": 1607,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_readyClients",
          "description": "Implements `PropertyEffects`'s `_readyClients` call. Attaches\nelement dom by calling `_attachDom` with the dom stamped from the\nelement's template via `_stampTemplate`. Note that this allows\nclient dom to be attached to the element prior to any observers\nrunning.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 558,
              "column": 6
            },
            "end": {
              "line": 567,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "setProperties",
          "description": "Sets a bag of property changes to this instance, and\nsynchronously processes all effects of the properties as a batch.\n\nProperty names must be simple properties, not paths.  Batched\npath propagation is not supported.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1636,
              "column": 6
            },
            "end": {
              "line": 1647,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of one or more key-value pairs whose key is\n  a property and value is the new value to set for that property."
            },
            {
              "name": "setReadOnly",
              "type": "boolean=",
              "description": "When true, any private values set in\n  `props` will be set. By default, `setProperties` will not set\n  `readOnly: true` root properties."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_propagatePropertyChanges",
          "description": "Called to propagate any property changes to stamped template nodes\nmanaged by this element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1734,
              "column": 6
            },
            "end": {
              "line": 1744,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps",
              "type": "Object",
              "description": "Bag of changed properties"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "linkPaths",
          "description": "Aliases one data path as another, such that path notifications from one\nare routed to the other.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1755,
              "column": 6
            },
            "end": {
              "line": 1760,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "to",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Target path to link."
            },
            {
              "name": "from",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Source path to link."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unlinkPaths",
          "description": "Removes a data path alias previously established with `_linkPaths`.\n\nNote, the path to unlink should be the target (`to`) used when\nlinking the paths.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1772,
              "column": 6
            },
            "end": {
              "line": 1777,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Target path to unlink."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifySplices",
          "description": "Notify that an array has changed.\n\nExample:\n\n    this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n    ...\n    this.items.splice(1, 1, {name: 'Sam'});\n    this.items.push({name: 'Bob'});\n    this.notifySplices('items', [\n      { index: 1, removed: [{name: 'Todd'}], addedCount: 1, object: this.items, type: 'splice' },\n      { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n    ]);",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1809,
              "column": 6
            },
            "end": {
              "line": 1813,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "splices",
              "type": "Array",
              "description": "Array of splice records indicating ordered\n  changes that occurred to the array. Each record should have the\n  following fields:\n   * index: index at which the change occurred\n   * removed: array of items that were removed from this index\n   * addedCount: number of new items added at this index\n   * object: a reference to the array in question\n   * type: the string literal 'splice'\n\n  Note that splice records _must_ be normalized such that they are\n  reported in index order (raw results from `Object.observe` are not\n  ordered and must be normalized/merged before notifying)."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "get",
          "description": "Convenience method for reading a value from a path.\n\nNote, if any part in the path is undefined, this method returns\n`undefined` (this method does not throw when dereferencing undefined\npaths).",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1834,
              "column": 6
            },
            "end": {
              "line": 1836,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to the value\n  to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `users.12.name` or `['users', 12, 'name']`)."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at the path, or `undefined` if any part of the path\n  is undefined."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "set",
          "description": "Convenience method for setting a value to a path and notifying any\nelements bound to the same path.\n\nNote, if any part in the path except for the last is undefined,\nthis method does nothing (this method does not throw when\ndereferencing undefined paths).",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1859,
              "column": 6
            },
            "end": {
              "line": 1869,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to the value\n  to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `'users.12.name'` or `['users', 12, 'name']`)."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set at the specified path."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated.\n  When specified, no notification will occur."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "push",
          "description": "Adds items onto the end of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1885,
              "column": 6
            },
            "end": {
              "line": 1894,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to push onto array"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "pop",
          "description": "Removes an item from the end of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1909,
              "column": 6
            },
            "end": {
              "line": 1918,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "splice",
          "description": "Starting from the start index specified, removes 0 or more items\nfrom the array and inserts 0 or more new items in their place.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.splice`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1937,
              "column": 6
            },
            "end": {
              "line": 1974,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            },
            {
              "name": "start",
              "type": "number",
              "description": "Index from which to start removing/inserting."
            },
            {
              "name": "deleteCount",
              "type": "number",
              "description": "Number of items to remove."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to insert into array."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Array of removed items."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "shift",
          "description": "Removes an item from the beginning of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1989,
              "column": 6
            },
            "end": {
              "line": 1998,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unshift",
          "description": "Adds items onto the beginning of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2014,
              "column": 6
            },
            "end": {
              "line": 2022,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to insert info array"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifyPath",
          "description": "Notify that a path has changed.\n\nExample:\n\n    this.item.user.name = 'Bob';\n    this.notifyPath('item.user.name');",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2037,
              "column": 6
            },
            "end": {
              "line": 2054,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Value at the path (optional)."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReadOnlyProperty",
          "description": "Equivalent to static `createReadOnlyProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2067,
              "column": 6
            },
            "end": {
              "line": 2074,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createPropertyObserver",
          "description": "Equivalent to static `createPropertyObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2088,
              "column": 6
            },
            "end": {
              "line": 2098,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "method",
              "type": "(string | function (*, *))",
              "description": "Function or name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createMethodObserver",
          "description": "Equivalent to static `createMethodObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2111,
              "column": 6
            },
            "end": {
              "line": 2117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createNotifyingProperty",
          "description": "Equivalent to static `createNotifyingProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2128,
              "column": 6
            },
            "end": {
              "line": 2136,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReflectedProperty",
          "description": "Equivalent to static `createReflectedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2147,
              "column": 6
            },
            "end": {
              "line": 2160,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createComputedProperty",
          "description": "Equivalent to static `createComputedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2174,
              "column": 6
            },
            "end": {
              "line": 2180,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_bindTemplate",
          "description": "Equivalent to static `bindTemplate` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.\n\nThis method may be called on the prototype (for prototypical template\nbinding, to avoid creating accessors every instance) once per prototype,\nand will be called with `runtimeBinding: true` by `_stampTemplate` to\ncreate and link an instance of the template metadata associated with a\nparticular stamping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2357,
              "column": 6
            },
            "end": {
              "line": 2380,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            },
            {
              "name": "instanceBinding",
              "type": "boolean=",
              "description": "When false (default), performs\n  \"prototypical\" binding of the template and overwrites any previously\n  bound template for the class. When true (as passed from\n  `_stampTemplate`), the template info is instanced and linked into\n  the list of bound templates."
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Template metadata object; for `runtimeBinding`,\n  this is an instance of the prototypical template info"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removeBoundDom",
          "description": "Removes and unbinds the nodes previously contained in the provided\nDocumentFragment returned from `_stampTemplate`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2459,
              "column": 6
            },
            "end": {
              "line": 2480,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "!StampedTemplate",
              "description": "DocumentFragment previously returned\n  from `_stampTemplate` associated with the nodes to be removed"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "connectedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`connectedCallback`.\n\nThe default implementation enables the property effects system and\nflushes any pending properties, and updates shimmed CSS properties\nwhen using the ShadyCSS scoping/custom properties polyfill.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 527,
              "column": 6
            },
            "end": {
              "line": 532,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "Called when the element is removed from a document",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-mixin.html",
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesMixin"
        },
        {
          "name": "_attachDom",
          "description": "Attaches an element's stamped dom to itself. By default,\nthis method creates a `shadowRoot` and adds the dom to it.\nHowever, this method may be overridden to allow an element\nto put its dom in another location.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 581,
              "column": 6
            },
            "end": {
              "line": 597,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "StampedTemplate",
              "description": "to attach to the element."
            }
          ],
          "return": {
            "type": "ShadowRoot",
            "desc": "node to which the dom has been attached."
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "updateStyles",
          "description": "When using the ShadyCSS scoping and custom property shim, causes all\nshimmed styles in this element (and its subtree) to be updated\nbased on current custom property values.\n\nThe optional parameter overrides inline custom property styles with an\nobject of properties where the keys are CSS properties, and the values\nare strings.\n\nExample: `this.updateStyles({'--color': 'blue'})`\n\nThese properties are retained unless a value of `null` is set.\n\nNote: This function does not support updating CSS mixins.\nYou can not dynamically change the value of an `@apply`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 620,
              "column": 6
            },
            "end": {
              "line": 624,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Object=",
              "description": "Bag of custom property key/values to\n  apply to this element."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "resolveUrl",
          "description": "Rewrites a given URL relative to a base URL. The base URL defaults to\nthe original location of the document containing the `dom-module` for\nthis element. This method will return the same URL before and after\nbundling.\n\nNote that this function performs no resolution for URLs that start\nwith `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\nURL resolution, use `window.URL`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 641,
              "column": 6
            },
            "end": {
              "line": 646,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "URL to resolve."
            },
            {
              "name": "base",
              "type": "string=",
              "description": "Optional base URL to resolve against, defaults\nto the element's `importPath`"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Rewritten URL relative to base"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        }
      ],
      "staticMethods": [
        {
          "name": "_parseTemplate",
          "description": "Scans a template to produce template metadata.\n\nTemplate-specific metadata are stored in the object returned, and node-\nspecific metadata are stored in objects in its flattened `nodeInfoList`\narray.  Only nodes in the template that were parsed as nodes of\ninterest contain an object in `nodeInfoList`.  Each `nodeInfo` object\ncontains an `index` (`childNodes` index in parent) and optionally\n`parent`, which points to node info of its parent (including its index).\n\nThe template metadata object returned from this method has the following\nstructure (many fields optional):\n\n```js\n  {\n    // Flattened list of node metadata (for nodes that generated metadata)\n    nodeInfoList: [\n      {\n        // `id` attribute for any nodes with id's for generating `$` map\n        id: {string},\n        // `on-event=\"handler\"` metadata\n        events: [\n          {\n            name: {string},   // event name\n            value: {string},  // handler method name\n          }, ...\n        ],\n        // Notes when the template contained a `<slot>` for shady DOM\n        // optimization purposes\n        hasInsertionPoint: {boolean},\n        // For nested `<template>`` nodes, nested template metadata\n        templateInfo: {object}, // nested template metadata\n        // Metadata to allow efficient retrieval of instanced node\n        // corresponding to this metadata\n        parentInfo: {number},   // reference to parent nodeInfo>\n        parentIndex: {number},  // index in parent's `childNodes` collection\n        infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n      },\n      ...\n    ],\n    // When true, the template had the `strip-whitespace` attribute\n    // or was nested in a template with that setting\n    stripWhitespace: {boolean},\n    // For nested templates, nested template content is moved into\n    // a document fragment stored here; this is an optimization to\n    // avoid the cost of nested template cloning\n    content: {DocumentFragment}\n  }\n```\n\nThis method kicks off a recursive treewalk as follows:\n\n```\n   _parseTemplate <---------------------+\n     _parseTemplateContent              |\n       _parseTemplateNode  <------------|--+\n         _parseTemplateNestedTemplate --+  |\n         _parseTemplateChildNodes ---------+\n         _parseTemplateNodeAttributes\n           _parseTemplateNodeAttribute\n\n```\n\nThese methods may be overridden to add custom metadata about templates\nto either `templateInfo` or `nodeInfo`.\n\nNote that this method may be destructive to the template, in that\ne.g. event annotations may be removed after being noted in the\ntemplate metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template to parse"
            },
            {
              "name": "outerTemplateInfo",
              "type": "TemplateInfo=",
              "description": "Template metadata from the outer\n  template, for parsing nested templates"
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Parsed template metadata"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateContent",
          "description": "Overrides `PropertyAccessors` to add map of dynamic functions on\ntemplate info, for consumption by `PropertyEffects` template binding\ncode. This map determines which method templates should have accessors\ncreated for them.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 657,
              "column": 6
            },
            "end": {
              "line": 660,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template"
            },
            {
              "name": "templateInfo"
            },
            {
              "name": "nodeInfo"
            }
          ],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_parseTemplateNode",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from `TextNode`'s' `textContent`.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2499,
              "column": 6
            },
            "end": {
              "line": 2513,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseTemplateChildNodes",
          "description": "Parses template child nodes for the given root node.\n\nThis method also wraps whitelisted legacy template extensions\n(`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\nwrappers, collapses text nodes, and strips whitespace from the template\nif the `templateInfo.stripWhitespace` setting was provided.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 258,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Node",
              "description": "Root node whose `childNodes` will be parsed"
            },
            {
              "name": "templateInfo",
              "type": "!TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "!NodeInfo",
              "description": "Node metadata for current template."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateNestedTemplate",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nbinding the properties that a nested template depends on to the template\nas `_host_<property>`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2591,
              "column": 6
            },
            "end": {
              "line": 2601,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseTemplateNodeAttributes",
          "description": "Parses template node attributes and adds node metadata to `nodeInfo`\nfor nodes of interest.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateNodeAttribute",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from attributes.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2534,
              "column": 6
            },
            "end": {
              "line": 2575,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            },
            {
              "name": "name",
              "type": "string",
              "description": "Attribute name"
            },
            {
              "name": "value",
              "type": "string",
              "description": "Attribute value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_contentForTemplate",
          "description": "Returns the `content` document fragment for a given template.\n\nFor nested templates, Polymer performs an optimization to cache nested\ntemplate content to avoid the cost of cloning deeply nested templates.\nThis method retrieves the cached content for a given template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 388,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template to retrieve `content` for"
            }
          ],
          "return": {
            "type": "DocumentFragment",
            "desc": "Content fragment"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "createProperties",
          "description": "Override of PropertiesChanged createProperties to create accessors\nand property effects for all of the properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 325,
              "column": 7
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "attributeNameForProperty",
          "description": "Returns an attribute name that corresponds to the given property.\nThe attribute name is the lowercased property name. Override to\ncustomize this mapping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property to convert"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Attribute name corresponding to the given property."
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "typeForProperty",
          "description": "Overrides `PropertiesChanged` method to return type specified in the\nstatic `properties` object for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-mixin.html",
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "string",
              "description": "Name of property"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Type to which to deserialize attribute"
          },
          "inheritedFrom": "Polymer.PropertiesMixin"
        },
        {
          "name": "createPropertiesForAttributes",
          "description": "Generates property accessors for all attributes in the standard\nstatic `observedAttributes` array.\n\nAttribute names are mapped to property names using the `dash-case` to\n`camelCase` convention",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "addPropertyEffect",
          "description": "Ensures an accessor exists for the specified property, and adds\nto a list of \"property effects\" that will run when the accessor for\nthe specified property is set.  Effects are grouped by \"type\", which\nroughly corresponds to a phase in effect processing.  The effect\nmetadata should be in the following form:\n\n    {\n      fn: effectFunction, // Reference to function to call to perform effect\n      info: { ... }       // Effect metadata passed to function\n      trigger: {          // Optional triggering metadata; if not provided\n        name: string      // the property is treated as a wildcard\n        structured: boolean\n        wildcard: boolean\n      }\n    }\n\nEffects are called from `_propertiesChanged` in the following order by\ntype:\n\n1. COMPUTE\n2. PROPAGATE\n3. REFLECT\n4. OBSERVE\n5. NOTIFY\n\nEffect functions are called with the following signature:\n\n    effectFunction(inst, path, props, oldProps, info, hasPaths)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2220,
              "column": 6
            },
            "end": {
              "line": 2222,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createPropertyObserver",
          "description": "Creates a single-property observer for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2234,
              "column": 6
            },
            "end": {
              "line": 2236,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "method",
              "type": "(string | function (*, *))",
              "description": "Function or name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createMethodObserver",
          "description": "Creates a multi-property \"method observer\" based on the provided\nexpression, which should be a string in the form of a normal JavaScript\nfunction signature: `'methodName(arg1, [..., argn])'`.  Each argument\nshould correspond to a property or path in the context of this\nprototype (or instance), or may be a literal string or number.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2251,
              "column": 6
            },
            "end": {
              "line": 2253,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating"
            }
          ],
          "return": {
            "type": "void",
            "desc": "whether method names should be included as a dependency to the effect."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createNotifyingProperty",
          "description": "Causes the setter for the given property to dispatch `<property>-changed`\nevents to notify of changes to the property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2263,
              "column": 6
            },
            "end": {
              "line": 2265,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createReadOnlyProperty",
          "description": "Creates a read-only accessor for the given property.\n\nTo set the property, use the protected `_setProperty` API.\nTo create a custom protected setter (e.g. `_setMyProp()` for\nproperty `myProp`), pass `true` for `protectedSetter`.\n\nNote, if the property will have other property effects, this method\nshould be called first, before adding other effects.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2283,
              "column": 6
            },
            "end": {
              "line": 2285,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createReflectedProperty",
          "description": "Causes the setter for the given property to reflect the property value\nto a (dash-cased) attribute of the same name.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2295,
              "column": 6
            },
            "end": {
              "line": 2297,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createComputedProperty",
          "description": "Creates a computed property whose value is set to the result of the\nmethod described by the given `expression` each time one or more\narguments to the method changes.  The expression should be a string\nin the form of a normal JavaScript function signature:\n`'methodName(arg1, [..., argn])'`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2313,
              "column": 6
            },
            "end": {
              "line": 2315,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating whether\n  method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "bindTemplate",
          "description": "Parses the provided template to ensure binding effects are created\nfor them, and then ensures property accessors are created for any\ndependent properties in the template.  Binding effects for bound\ntemplates are stored in a linked list on the instance so that\ntemplates can be efficiently stamped and unstamped.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2329,
              "column": 6
            },
            "end": {
              "line": 2331,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Template metadata object"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addTemplatePropertyEffect",
          "description": "Adds a property effect to the given template metadata, which is run\nat the \"propagate\" stage of `_propertiesChanged` when the template\nhas been bound to the element via `_bindTemplate`.\n\nThe `effect` object should match the format in `_addPropertyEffect`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2395,
              "column": 6
            },
            "end": {
              "line": 2401,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "templateInfo",
              "type": "Object",
              "description": "Template metadata to add effect to"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseBindings",
          "description": "Called to parse text in a template (either attribute values or\ntextContent) into binding metadata.\n\nAny overrides of this method should return an array of binding part\nmetadata  representing one or more bindings found in the provided text\nand any \"literal\" text in between.  Any non-literal parts will be passed\nto `_evaluateBinding` when any dependencies change.  The only required\nfields of each \"part\" in the returned array are as follows:\n\n- `dependencies` - Array containing trigger metadata for each property\n  that should trigger the binding to update\n- `literal` - String containing text if the part represents a literal;\n  in this case no `dependencies` are needed\n\nAdditional metadata for use by `_evaluateBinding` may be provided in\neach part object as needed.\n\nThe default implementation handles the following types of bindings\n(one or more may be intermixed with literal strings):\n- Property binding: `[[prop]]`\n- Path binding: `[[object.prop]]`\n- Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n- Two-way property or path bindings (supports negation):\n  `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n- Inline computed method (supports negation):\n  `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2636,
              "column": 6
            },
            "end": {
              "line": 2701,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text",
              "type": "string",
              "description": "Text to parse from attribute or textContent"
            },
            {
              "name": "templateInfo",
              "type": "Object",
              "description": "Current template metadata"
            }
          ],
          "return": {
            "type": "Array.<!BindingPart>",
            "desc": "Array of binding part metadata"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_evaluateBinding",
          "description": "Called to evaluate a previously parsed binding part based on a set of\none or more changed dependencies.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2717,
              "column": 6
            },
            "end": {
              "line": 2734,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inst",
              "type": "this",
              "description": "Element that should be used as scope for\n  binding dependencies"
            },
            {
              "name": "part",
              "type": "BindingPart",
              "description": "Binding part metadata"
            },
            {
              "name": "path",
              "type": "string",
              "description": "Property/path that triggered this effect"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of current property changes"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value the binding part evaluated to"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "finalize",
          "description": "Finalizes an element definition, including ensuring any super classes\nare also finalized. This includes ensuring property\naccessors exist on the element prototype. This method calls\n`_finalizeClass` to finalize each constructor in the prototype chain.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/properties-mixin.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesMixin"
        },
        {
          "name": "_finalizeClass",
          "description": "Override of PropertiesMixin _finalizeClass to create observers and\nfind the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 293,
              "column": 5
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "createObservers",
          "description": "Creates observers for the given `observers` array.\nLeverages `PropertyEffects` to create observers.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "observers",
              "type": "Object",
              "description": "Array of observer descriptors for\n  this class"
            },
            {
              "name": "dynamicFns",
              "type": "Object",
              "description": "Object containing keys for any properties\n  that are functions and should trigger the effect when the function\n  reference is changed"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_processStyleText",
          "description": "Gather style text for a style element in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 490,
              "column": 6
            },
            "end": {
              "line": 492,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cssText",
              "type": "string",
              "description": "Text containing styling to process"
            },
            {
              "name": "baseURI",
              "type": "string",
              "description": "Base URI to rebase CSS paths against"
            }
          ],
          "return": {
            "type": "string",
            "desc": "The processed CSS text"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_finalizeTemplate",
          "description": "Configures an element `proto` to function with a given `template`.\nThe element name `is` and extends `ext` must be specified for ShadyCSS\nstyle scoping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 503,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "is",
              "type": "string",
              "description": "Tag name (or type extension name) for this element"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 72,
          "column": 50
        },
        "end": {
          "line": 72,
          "column": 82
        }
      },
      "privacy": "private",
      "superclass": "Polymer.Element"
    }
  ]
}
